{
    "blockly": false,
    "blockly_xml": "<xml></xml>",
    "category": "Uncategorized",
    "coa": {
        "data": {
            "clean": true,
            "code_block": "",
            "description": "Provides TitaniumCloud classification of a file and takes remediation actions (e.g. submits indicator and quarantines device with Defender ATP connector)",
            "hash": "75c648bb41303b768702ade193f249bf0157c3d0",
            "joint": {
                "cells": [
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "f26bbdbf-db64-4535-b108-cb62d6fbc4d1",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "3dccc186-c4cc-4b1c-aaf3-85c1446a3db7",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "7e6198ca-f32f-4b4c-a4db-206b639173aa",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 6
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "70791851-a9fe-4585-b2dc-9e49880729c9",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "7e6198ca-f32f-4b4c-a4db-206b639173aa",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "215dae0d-1423-45d4-aa5e-ffd10677adc7",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 10
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "c189b75a-0987-44e3-8745-9465539c29ad",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "446ce654-9640-4d9c-b9e7-66e65765b8f6",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "0498a3ac-d578-4ef4-82b7-982092622ab1",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 16
                    },
                    {
                        "0": "E",
                        "1": "N",
                        "2": "D",
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".title": {
                                "text": "END"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_end.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            }
                        },
                        "block_code": "def on_finish(container, summary):\n    phantom.debug('on_finish() called')\n    # This function is called after all actions are completed.\n    # summary of all the action and/or all details of actions\n    # can be collected here.\n\n    # summary_json = phantom.get_summary()\n    # if 'result' in summary_json:\n        # for action_result in summary_json['result']:\n            # if 'action_run_id' in action_result:\n                # action_results = phantom.get_action_results(action_run_id=action_result['action_run_id'], result_data=False, flatten=False)\n                # phantom.debug(action_results)\n\n    return",
                        "callback_code": "# read-only block view not available",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "dynamic analysis results, quarantine device, container update 2, check for malicious",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "2e09ac8a-da86-4ce2-9e5d-14ef06b6dc76",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "# read-only block view not available",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 522,
                        "line_start": 509,
                        "name": "",
                        "notes": "",
                        "number": 0,
                        "order": 19,
                        "outPorts": [],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1540,
                            "y": 100
                        },
                        "previous_function": "",
                        "previous_name": "",
                        "show_number": true,
                        "size": {
                            "height": 54,
                            "width": 80
                        },
                        "status": "",
                        "title": "END",
                        "type": "coa.StartEnd",
                        "warn": false,
                        "z": 28
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "b5066ff1-46d4-4fde-9d01-85751dce3447",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "773e8f04-3fe7-4750-af5b-8ec09dbd62a4",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "0dd084ac-d2c1-4179-a534-4766c00e1bd5",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 29
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "b8b0925c-419b-4819-8c55-5025c9226859",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "0dd084ac-d2c1-4179-a534-4766c00e1bd5",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "1aae0e9d-8751-4a8b-a8b2-f635b6d297d2",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 31
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "4496329c-eed7-4bb8-8f1d-26bb8f6f278d",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "215dae0d-1423-45d4-aa5e-ffd10677adc7",
                            "port": "out-2",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(2) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "fd12a637-e594-41c4-9578-f3738143be95",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 34
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "d866ffbe-80b3-491a-94de-9d33b991f48b",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "fd12a637-e594-41c4-9578-f3738143be95",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "1ab84bc5-f1c2-47ad-a2d9-3b9f135c19de",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 36
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "1e7c0ff3-75d2-4714-ac44-50662be8beb3",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "1ab84bc5-f1c2-47ad-a2d9-3b9f135c19de",
                            "port": "out-2",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(2) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "a2455802-e3b2-49d3-815c-c75868762b65",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 40
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "34d1e462-4888-4db0-9394-a62bcb50e0c5",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "a2455802-e3b2-49d3-815c-c75868762b65",
                            "port": "out-3",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(3) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "2e09ac8a-da86-4ce2-9e5d-14ef06b6dc76",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 49
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "d968b696-27d9-4c09-8c71-9411a1cc74ab",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "1aae0e9d-8751-4a8b-a8b2-f635b6d297d2",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "2e09ac8a-da86-4ce2-9e5d-14ef06b6dc76",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 50
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "3e7b2e52-8b9a-4915-810b-9441a72122b8",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "1959fc8e-4e1b-431c-8cb5-a9d91d49136f",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "2e09ac8a-da86-4ce2-9e5d-14ef06b6dc76",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 51
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "80358480-cd4a-4240-9f34-ae3104252c75",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "3c51296a-f910-4d84-9e96-7f14b6cd75cc",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "23373ceb-4520-4996-9c21-ff7167dd72de",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 96
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "db083f4b-821a-45d2-a48a-d3faa6d72ffe",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "23373ceb-4520-4996-9c21-ff7167dd72de",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "1959fc8e-4e1b-431c-8cb5-a9d91d49136f",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 98
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "e3363c53-db78-4a46-b7a5-431ab271cf13",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "a2455802-e3b2-49d3-815c-c75868762b65",
                            "port": "out-2",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(2) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "4e136b76-a6dc-45d8-83b3-de519ee872de",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 107
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "bd087116-0e24-4a8f-8832-abb471dbf870",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "4e136b76-a6dc-45d8-83b3-de519ee872de",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "773e8f04-3fe7-4750-af5b-8ec09dbd62a4",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 109
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "8479e29e-6f9d-4b8c-8210-644f8c679e92",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "a2455802-e3b2-49d3-815c-c75868762b65",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "3c51296a-f910-4d84-9e96-7f14b6cd75cc",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 112
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "9eb03854-cec7-4a92-9216-a231a0d9a01a",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "23373ceb-4520-4996-9c21-ff7167dd72de",
                            "port": "out-2",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(2) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "2e09ac8a-da86-4ce2-9e5d-14ef06b6dc76",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 120
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "95b5d59b-aa5c-4b41-b289-7be06f390999",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "0498a3ac-d578-4ef4-82b7-982092622ab1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "c1f0158d-85a2-408c-a1a5-d166ba3ac16f",
                            "port": "in",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 190
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "ea10f003-a19e-45fa-b6b1-182b9b440e65",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "c1f0158d-85a2-408c-a1a5-d166ba3ac16f",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "4e136b76-a6dc-45d8-83b3-de519ee872de",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 194
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "46cee417-3b5e-42e9-85c9-ffd384f7df0c",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "c1f0158d-85a2-408c-a1a5-d166ba3ac16f",
                            "port": "out-2",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(2) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "3c51296a-f910-4d84-9e96-7f14b6cd75cc",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 200
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "bc6dc10f-c39a-41ed-bc4f-2953bae8848d",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "c1f0158d-85a2-408c-a1a5-d166ba3ac16f",
                            "port": "out-3",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(3) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "3dccc186-c4cc-4b1c-aaf3-85c1446a3db7",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 202
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "fed93f28-20e5-4473-8b4a-1374208ca99e",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "215dae0d-1423-45d4-aa5e-ffd10677adc7",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "de6d7421-1786-4302-bed0-3a582e5d42c7",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 256
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "e33ddbef-682e-4562-b303-1585f59b9db2",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "de6d7421-1786-4302-bed0-3a582e5d42c7",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "7e6198ca-f32f-4b4c-a4db-206b639173aa",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 259
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "abebb43b-575f-4f05-babc-d24992f9f251",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "1ab84bc5-f1c2-47ad-a2d9-3b9f135c19de",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "fa253efe-475a-44f6-a3be-5d7f002ba882",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 267
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "fc5a6142-b6c8-4ec6-bf85-20c8262a28fd",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "fa253efe-475a-44f6-a3be-5d7f002ba882",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "fd12a637-e594-41c4-9578-f3738143be95",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 277
                    },
                    {
                        "0": "S",
                        "1": "T",
                        "2": "A",
                        "3": "R",
                        "4": "T",
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "ref-x": 33,
                                "ref-y": 8,
                                "text": "START"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.icon image": {
                                "ref-x": 13,
                                "xlink:href": "/inc/coa/img/block_icon_start.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            }
                        },
                        "block_code": "def on_start(container):\n    phantom.debug('on_start() called')\n    \n    # call 'file_reputation' block\n    file_reputation(container=container)\n\n    return",
                        "callback_code": "# read-only block view not available",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "",
                        "connection_type": "",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "446ce654-9640-4d9c-b9e7-66e65765b8f6",
                        "inPorts": [],
                        "join_code": "# read-only block view not available",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 16,
                        "line_start": 8,
                        "name": "",
                        "notes": "",
                        "number": 0,
                        "order": 1,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -380,
                            "y": 100
                        },
                        "previous_function": "",
                        "previous_name": "",
                        "show_number": true,
                        "size": {
                            "height": 54,
                            "width": 80
                        },
                        "status": "",
                        "title": "START",
                        "type": "coa.StartEnd",
                        "warn": false,
                        "z": 302
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 1
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".outPorts>.port-1": {
                                "port": {
                                    "id": "out-2",
                                    "type": "out"
                                },
                                "ref-x": 41,
                                "ref-y": 82
                            },
                            ".outPorts>.port-1>.port-body": {
                                "port": {
                                    "id": "out-2",
                                    "type": "out"
                                }
                            },
                            ".outPorts>.port-2": {
                                "port": {
                                    "id": "out-3",
                                    "type": "out"
                                },
                                "ref-x": 41,
                                "ref-y": -2
                            },
                            ".outPorts>.port-2>.port-body": {
                                "port": {
                                    "id": "out-3",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def check_status(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('check_status() called')\n\n    # collect filtered artifact ids for 'if' condition 1\n    matched_artifacts_1, matched_results_1 = phantom.condition(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"file_reputation:action_result.data.*.rl.malware_presence.status\", \"==\", \"MALICIOUS\"],\n        ],\n        name=\"check_status:condition_1\")\n\n    # call connected blocks if filtered artifacts or results\n    if matched_artifacts_1 or matched_results_1:\n        join_set_malicious(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function, filtered_artifacts=matched_artifacts_1, filtered_results=matched_results_1)\n\n    # collect filtered artifact ids for 'if' condition 2\n    matched_artifacts_2, matched_results_2 = phantom.condition(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"file_reputation:action_result.data.*.rl.malware_presence.status\", \"==\", \"KNOWN\"],\n        ],\n        name=\"check_status:condition_2\")\n\n    # call connected blocks if filtered artifacts or results\n    if matched_artifacts_2 or matched_results_2:\n        join_check_for_malicious(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function, filtered_artifacts=matched_artifacts_2, filtered_results=matched_results_2)\n\n    # collect filtered artifact ids for 'if' condition 3\n    matched_artifacts_3, matched_results_3 = phantom.condition(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"file_reputation:action_result.data.*.rl.malware_presence.status\", \"==\", \"UNKNOWN\"],\n            [\"file_reputation:action_result.data.*.rl.malware_presence.status\", \"==\", \"SUSPICIOUS\"],\n        ],\n        logical_operator='or',\n        name=\"check_status:condition_3\")\n\n    # call connected blocks if filtered artifacts or results\n    if matched_artifacts_3 or matched_results_3:\n        upload_file(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function, filtered_artifacts=matched_artifacts_3, filtered_results=matched_results_3)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "file reputation",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "check status",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "c1f0158d-85a2-408c-a1a5-d166ba3ac16f",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 489,
                        "line_start": 443,
                        "name": "filter",
                        "notes": "Filters by malware presence status",
                        "number": 1,
                        "order": 16,
                        "outPorts": [
                            "out-1",
                            "out-2",
                            "out-3"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "file_reputation:action_result.data.*.rl.malware_presence.status",
                                        "value": "MALICIOUS"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            },
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "file_reputation:action_result.data.*.rl.malware_presence.status",
                                        "value": "KNOWN"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            },
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "file_reputation:action_result.data.*.rl.malware_presence.status",
                                        "value": "UNKNOWN"
                                    },
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "file_reputation:action_result.data.*.rl.malware_presence.status",
                                        "value": "SUSPICIOUS"
                                    }
                                ],
                                "display": "If",
                                "logic": "or",
                                "type": "if"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 0,
                            "y": 80
                        },
                        "previous_function": "",
                        "previous_name": "check_status",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "filter",
                        "status": "",
                        "type": "coa.Filter",
                        "warn": false,
                        "z": 308
                    },
                    {
                        "action": "upload file",
                        "action_type": "generic",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "file_name": "sample",
                            "vault_id": "filtered-data:check_status:condition_3:file_reputation:action_result.parameter.hash"
                        },
                        "angle": 0,
                        "app": "Reversinglabs TitaniumCloud v2",
                        "appid": "0fd5a550-35a4-4641-9d28-9237ec71cf3c",
                        "approver": "",
                        "assets": [
                            {
                                "action": "upload file",
                                "actions": [
                                    "get file",
                                    "upload file",
                                    "reanalyze file",
                                    "dynamic analysis results",
                                    "submit for dynamic analysis",
                                    "uri index",
                                    "uri statistics",
                                    "analyze url",
                                    "get url analysis feed from date",
                                    "get latest url analysis feed",
                                    "get downloaded files",
                                    "url reputation",
                                    "functional similarity",
                                    "file analysis",
                                    "file reputation",
                                    "av scanners",
                                    "advanced search",
                                    "imphash similarity",
                                    "get yara retro matches",
                                    "yara retro cancel hunt",
                                    "yara retro check status",
                                    "yara retro start hunt",
                                    "yara retro enable hunt",
                                    "get yara matches",
                                    "yara get ruleset text",
                                    "yara get ruleset info",
                                    "yara delete ruleset",
                                    "yara create ruleset",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "Reversinglabs TitaniumCloud v2",
                                "app_version": "1.0.1",
                                "appid": "0fd5a550-35a4-4641-9d28-9237ec71cf3c",
                                "asset_name": "reversinglabs_titaniumcloud_v2",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "file_name": "sample",
                                    "vault_id": "filtered-data:check_status:condition_3:file_reputation:action_result.parameter.hash"
                                },
                                "has_app": true,
                                "id": 78,
                                "loaded": false,
                                "missing": false,
                                "name": "reversinglabs_titaniumcloud_v2",
                                "output": [
                                    {
                                        "column_name": "status",
                                        "column_order": 2,
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "column_name": "file_name",
                                        "column_order": 1,
                                        "contains": [
                                            "file name"
                                        ],
                                        "data_path": "action_result.parameter.file_name",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "vault_id",
                                        "column_order": 0,
                                        "contains": [
                                            "pe file",
                                            "pdf",
                                            "flash",
                                            "apk",
                                            "jar",
                                            "doc",
                                            "xls",
                                            "ppt"
                                        ],
                                        "data_path": "action_result.parameter.vault_id",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.summary",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric"
                                    }
                                ],
                                "parameters": {
                                    "file_name": {
                                        "contains": [
                                            "file name"
                                        ],
                                        "data_type": "string",
                                        "default": "sample",
                                        "description": "Filename to use",
                                        "id": 2,
                                        "key": "file_name",
                                        "name": "file_name",
                                        "order": 1,
                                        "param_name": "file_name",
                                        "primary": true,
                                        "required": false
                                    },
                                    "vault_id": {
                                        "contains": [
                                            "vault id"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Vault ID of file to upload",
                                        "id": 1,
                                        "key": "vault_id",
                                        "name": "vault_id",
                                        "order": 0,
                                        "param_name": "vault_id",
                                        "primary": true,
                                        "required": true
                                    }
                                },
                                "product_name": "TitaniumCloud",
                                "product_vendor": "Reversinglabs",
                                "targets": "78",
                                "type": "reputation"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "upload file"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Generic"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_generic.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def upload_file(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('upload_file() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'upload_file' call\n    filtered_results_data_1 = phantom.collect2(container=container, datapath=[\"filtered-data:check_status:condition_3:file_reputation:action_result.parameter.hash\", \"filtered-data:check_status:condition_3:file_reputation:action_result.parameter.context.artifact_id\"])\n\n    parameters = []\n    \n    # build parameters list for 'upload_file' call\n    for filtered_results_item_1 in filtered_results_data_1:\n        if filtered_results_item_1[0]:\n            parameters.append({\n                'vault_id': filtered_results_item_1[0],\n                'file_name': \"sample\",\n                # context (artifact id) is added to associate results with the artifact\n                'context': {'artifact_id': filtered_results_item_1[1]},\n            })\n\n    phantom.act(action=\"upload file\", parameters=parameters, assets=['reversinglabs_titaniumcloud_v2'], callback=join_submit_for_dynamic, name=\"upload_file\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "file reputation",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "upload file",
                        "delay": "0",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "3dccc186-c4cc-4b1c-aaf3-85c1446a3db7",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 40,
                        "line_start": 16,
                        "message": "Configuring now",
                        "name": "upload file",
                        "notes": "Uploads file to TitaniumCloud",
                        "number": 1,
                        "order": 2,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 120,
                            "y": -300
                        },
                        "previous_function": "",
                        "previous_name": "upload_file",
                        "required_params": {
                            "vault_id": true
                        },
                        "reviewer": "",
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "action_assets",
                        "status": "",
                        "title": "Generic",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 309
                    },
                    {
                        "action": "submit for dynamic analysis",
                        "action_type": "generic",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "platform": "windows10",
                            "sha1": "filtered-data:check_status:condition_3:file_reputation:action_result.parameter.hash"
                        },
                        "angle": 0,
                        "app": "Reversinglabs TitaniumCloud v2",
                        "appid": "0fd5a550-35a4-4641-9d28-9237ec71cf3c",
                        "approver": "",
                        "assets": [
                            {
                                "action": "submit for dynamic analysis",
                                "actions": [
                                    "get file",
                                    "upload file",
                                    "reanalyze file",
                                    "dynamic analysis results",
                                    "submit for dynamic analysis",
                                    "uri index",
                                    "uri statistics",
                                    "analyze url",
                                    "get url analysis feed from date",
                                    "get latest url analysis feed",
                                    "get downloaded files",
                                    "url reputation",
                                    "functional similarity",
                                    "file analysis",
                                    "file reputation",
                                    "av scanners",
                                    "advanced search",
                                    "imphash similarity",
                                    "get yara retro matches",
                                    "yara retro cancel hunt",
                                    "yara retro check status",
                                    "yara retro start hunt",
                                    "yara retro enable hunt",
                                    "get yara matches",
                                    "yara get ruleset text",
                                    "yara get ruleset info",
                                    "yara delete ruleset",
                                    "yara create ruleset",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "Reversinglabs TitaniumCloud v2",
                                "app_version": "1.0.1",
                                "appid": "0fd5a550-35a4-4641-9d28-9237ec71cf3c",
                                "asset_name": "reversinglabs_titaniumcloud_v2",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "platform": "windows10",
                                    "sha1": "filtered-data:check_status:condition_3:file_reputation:action_result.parameter.hash"
                                },
                                "has_app": true,
                                "id": 78,
                                "loaded": false,
                                "missing": false,
                                "name": "reversinglabs_titaniumcloud_v2",
                                "output": [
                                    {
                                        "column_name": "status",
                                        "column_order": 2,
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "column_name": "platform",
                                        "column_order": 1,
                                        "data_path": "action_result.parameter.platform",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "sha1",
                                        "column_order": 0,
                                        "data_path": "action_result.parameter.sha1",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.summary",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric"
                                    }
                                ],
                                "parameters": {
                                    "platform": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Selected platform on which the analysis will be performed. See TCA-0207 API documentation for available options",
                                        "id": 2,
                                        "key": "platform",
                                        "name": "platform",
                                        "order": 1,
                                        "param_name": "platform",
                                        "required": true
                                    },
                                    "sha1": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Selected sample's SHA-1 hash",
                                        "id": 1,
                                        "key": "sha1",
                                        "name": "sha1",
                                        "order": 0,
                                        "param_name": "sha1",
                                        "required": true
                                    }
                                },
                                "product_name": "TitaniumCloud",
                                "product_vendor": "Reversinglabs",
                                "targets": "78",
                                "type": "reputation"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "submit for dynamic"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Generic"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_generic.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            },
                            "g.timer image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_delay_dark_on.svg"
                            }
                        },
                        "block_code": "def submit_for_dynamic(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('submit_for_dynamic() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'submit_for_dynamic' call\n    filtered_results_data_1 = phantom.collect2(container=container, datapath=[\"filtered-data:check_status:condition_3:file_reputation:action_result.parameter.hash\", \"filtered-data:check_status:condition_3:file_reputation:action_result.parameter.context.artifact_id\"])\n\n    parameters = []\n    \n    # build parameters list for 'submit_for_dynamic' call\n    for filtered_results_item_1 in filtered_results_data_1:\n        if filtered_results_item_1[0]:\n            parameters.append({\n                'sha1': filtered_results_item_1[0],\n                'platform': \"windows10\",\n                # context (artifact id) is added to associate results with the artifact\n                'context': {'artifact_id': filtered_results_item_1[1]},\n            })\n    # calculate start time using delay of 1 minutes\n    start_time = datetime.now() + timedelta(minutes=1)\n\n    phantom.act(action=\"submit for dynamic analysis\", parameters=parameters, assets=['reversinglabs_titaniumcloud_v2'], callback=descision_1, start_time=start_time, name=\"submit_for_dynamic\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "upload file, submit for dynamic",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "submit for dynamic",
                        "delay": "1",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "7e6198ca-f32f-4b4c-a4db-206b639173aa",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "def join_submit_for_dynamic(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None):\n    phantom.debug('join_submit_for_dynamic() called')\n\n    # check if all connected incoming playbooks, actions, or custom functions are done i.e. have succeeded or failed\n    if phantom.completed(action_names=['upload_file']):\n        \n        # call connected block \"submit_for_dynamic\"\n        submit_for_dynamic(container=container, handle=handle)\n    \n    return",
                        "join_optional": [],
                        "join_start": 66,
                        "line_end": 77,
                        "line_start": 40,
                        "message": "Configuring now",
                        "name": "submit for dynamic analysis",
                        "notes": "Submits already uploaded file for dynamic analysis",
                        "number": 1,
                        "order": 3,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 380,
                            "y": -300
                        },
                        "previous_function": "",
                        "previous_name": "submit_for_dynamic",
                        "required_params": {
                            "platform": true,
                            "sha1": true
                        },
                        "reviewer": "",
                        "show_delay": true,
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "action_assets",
                        "status": "",
                        "title": "Generic",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 310
                    },
                    {
                        "action": "dynamic analysis results",
                        "action_type": "investigate",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "analysis_id": "",
                            "latest": "",
                            "sha1": "submit_for_dynamic:action_result.parameter.sha1"
                        },
                        "angle": 0,
                        "app": "",
                        "appid": "0fd5a550-35a4-4641-9d28-9237ec71cf3c",
                        "approver": "",
                        "assets": [
                            {
                                "action": "dynamic analysis results",
                                "actions": [
                                    "get file",
                                    "upload file",
                                    "reanalyze file",
                                    "dynamic analysis results",
                                    "submit for dynamic analysis",
                                    "uri index",
                                    "uri statistics",
                                    "analyze url",
                                    "get url analysis feed from date",
                                    "get latest url analysis feed",
                                    "get downloaded files",
                                    "url reputation",
                                    "functional similarity",
                                    "file analysis",
                                    "file reputation",
                                    "av scanners",
                                    "advanced search",
                                    "imphash similarity",
                                    "get yara retro matches",
                                    "yara retro cancel hunt",
                                    "yara retro check status",
                                    "yara retro start hunt",
                                    "yara retro enable hunt",
                                    "get yara matches",
                                    "yara get ruleset text",
                                    "yara get ruleset info",
                                    "yara delete ruleset",
                                    "yara create ruleset",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "Reversinglabs TitaniumCloud v2",
                                "app_version": "1.0.1",
                                "appid": "0fd5a550-35a4-4641-9d28-9237ec71cf3c",
                                "asset_name": "reversinglabs_titaniumcloud_v2",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "analysis_id": "",
                                    "latest": "",
                                    "sha1": "submit_for_dynamic:action_result.parameter.sha1"
                                },
                                "has_app": true,
                                "id": 78,
                                "loaded": false,
                                "missing": false,
                                "name": "reversinglabs_titaniumcloud_v2",
                                "output": [
                                    {
                                        "column_name": "status",
                                        "column_order": 3,
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "column_name": "analysis_id",
                                        "column_order": 1,
                                        "data_path": "action_result.parameter.analysis_id",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "latest",
                                        "column_order": 2,
                                        "data_path": "action_result.parameter.latest",
                                        "data_type": "boolean"
                                    },
                                    {
                                        "column_name": "sha1",
                                        "column_order": 0,
                                        "data_path": "action_result.parameter.sha1",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.summary",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric"
                                    }
                                ],
                                "parameters": {
                                    "analysis_id": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Return only the results of this analysis",
                                        "id": 2,
                                        "key": "analysis_id",
                                        "name": "analysis_id",
                                        "order": 1,
                                        "param_name": "analysis_id",
                                        "required": false
                                    },
                                    "latest": {
                                        "data_type": "boolean",
                                        "default": false,
                                        "description": "Return only the latest analysis results",
                                        "id": 3,
                                        "key": "latest",
                                        "name": "latest",
                                        "order": 2,
                                        "param_name": "latest",
                                        "required": false
                                    },
                                    "sha1": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Selected sample's SHA-1 hash",
                                        "id": 1,
                                        "key": "sha1",
                                        "name": "sha1",
                                        "order": 0,
                                        "param_name": "sha1",
                                        "required": true
                                    }
                                },
                                "product_name": "TitaniumCloud",
                                "product_vendor": "Reversinglabs",
                                "targets": "78",
                                "type": "reputation"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "dynamic analysis results"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Investigate"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_investigate.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            },
                            "g.timer image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_delay_dark_on.svg"
                            }
                        },
                        "block_code": "def dynamic_analysis_results(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('dynamic_analysis_results() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'dynamic_analysis_results' call\n    results_data_1 = phantom.collect2(container=container, datapath=['submit_for_dynamic:action_result.parameter.sha1', 'submit_for_dynamic:action_result.parameter.context.artifact_id'], action_results=results)\n\n    parameters = []\n    \n    # build parameters list for 'dynamic_analysis_results' call\n    for results_item_1 in results_data_1:\n        if results_item_1[0]:\n            parameters.append({\n                'sha1': results_item_1[0],\n                'latest': \"\",\n                'analysis_id': \"\",\n                # context (artifact id) is added to associate results with the artifact\n                'context': {'artifact_id': results_item_1[1]},\n            })\n    # calculate start time using delay of 1 minutes\n    start_time = datetime.now() + timedelta(minutes=1)\n\n    phantom.act(action=\"dynamic analysis results\", parameters=parameters, assets=['reversinglabs_titaniumcloud_v2'], callback=descision_4, start_time=start_time, name=\"dynamic_analysis_results\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "submit for dynamic, dynamic analysis results",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "dynamic analysis results",
                        "delay": "1",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "fd12a637-e594-41c4-9578-f3738143be95",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "def join_dynamic_analysis_results(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None):\n    phantom.debug('join_dynamic_analysis_results() called')\n\n    # check if all connected incoming playbooks, actions, or custom functions are done i.e. have succeeded or failed\n    if phantom.completed(action_names=['submit_for_dynamic']):\n        \n        # call connected block \"dynamic_analysis_results\"\n        dynamic_analysis_results(container=container, handle=handle)\n    \n    return",
                        "join_optional": [],
                        "join_start": 244,
                        "line_end": 255,
                        "line_start": 217,
                        "message": "Configuring now",
                        "name": "dynamic analysis results",
                        "notes": "Queries TitaniumCloud for dynamic analysis results",
                        "number": 1,
                        "order": 9,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 720,
                            "y": -160
                        },
                        "previous_function": "",
                        "previous_name": "dynamic_analysis_results",
                        "required_params": {
                            "sha1": true
                        },
                        "reviewer": "",
                        "show_delay": true,
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "action_assets",
                        "status": "",
                        "title": "Investigate",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 314
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#637282",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 1
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".outPorts>.port-1": {
                                "port": {
                                    "id": "out-2",
                                    "type": "out"
                                },
                                "ref-x": 41,
                                "ref-y": 82
                            },
                            ".outPorts>.port-1>.port-body": {
                                "port": {
                                    "id": "out-2",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def descision_1(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('descision_1() called')\n\n    # check for 'if' condition 1\n    matched = phantom.decision(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"submit_for_dynamic:action_result.status\", \"==\", \"failed\"],\n        ])\n\n    # call connected blocks if condition 1 matched\n    if matched:\n        Comment_waiting_sample_upload(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n        return\n\n    # call connected blocks for 'else' condition 2\n    join_dynamic_analysis_results(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "submit for dynamic",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "descision 1",
                        "description": "",
                        "hasElse": true,
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "215dae0d-1423-45d4-aa5e-ffd10677adc7",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 98,
                        "line_start": 77,
                        "name": "decision",
                        "notes": "Check if submission is failed, if it is try again else query for dynamic results",
                        "number": 1,
                        "order": 4,
                        "outPorts": [
                            "out-1",
                            "out-2"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "submit_for_dynamic:action_result.status",
                                        "value": "failed"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            },
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "",
                                        "value": ""
                                    }
                                ],
                                "display": "Else",
                                "logic": "and",
                                "type": "else"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 640,
                            "y": -300
                        },
                        "previous_function": "",
                        "previous_name": "descision_1",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "decision",
                        "status": "",
                        "type": "coa.Decision",
                        "warn": "",
                        "z": 315
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#637282",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 4
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".outPorts>.port-1": {
                                "port": {
                                    "id": "out-2",
                                    "type": "out"
                                },
                                "ref-x": 41,
                                "ref-y": 82
                            },
                            ".outPorts>.port-1>.port-body": {
                                "port": {
                                    "id": "out-2",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def descision_4(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('descision_4() called')\n\n    # check for 'if' condition 1\n    matched = phantom.decision(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"dynamic_analysis_results:action_result.status\", \"==\", \"failed\"],\n        ])\n\n    # call connected blocks if condition 1 matched\n    if matched:\n        Comment_waiting_for_dynamic(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n        return\n\n    # call connected blocks for 'else' condition 2\n    descision_5(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "dynamic analysis results",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "descision 4",
                        "description": "",
                        "hasElse": true,
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "1ab84bc5-f1c2-47ad-a2d9-3b9f135c19de",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 276,
                        "line_start": 255,
                        "name": "decision",
                        "notes": "Check if dynamic results are ready, if notm retry else continue",
                        "number": 4,
                        "order": 10,
                        "outPorts": [
                            "out-1",
                            "out-2"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "dynamic_analysis_results:action_result.status",
                                        "value": "failed"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            },
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "",
                                        "value": ""
                                    }
                                ],
                                "display": "Else",
                                "logic": "and",
                                "type": "else"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 980,
                            "y": -160
                        },
                        "previous_function": "",
                        "previous_name": "descision_4",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "decision",
                        "status": "",
                        "type": "coa.Decision",
                        "warn": "",
                        "z": 316
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "api": "add comment",
                        "attrs": {
                            ".api": {
                                "text": "Comment waiting for dy..."
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "API"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def Comment_waiting_for_dynamic(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Comment_waiting_for_dynamic() called')\n\n    phantom.comment(container=container, comment=\"Waiting for dynamic analysis results\")\n\n    container = phantom.get_container(container.get('id', None))\n    join_dynamic_analysis_results(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "color": "",
                        "configured": [
                            {
                                "addCommentComment": "Waiting for dynamic analysis results",
                                "key": "add-comment"
                            }
                        ],
                        "connected_to_start": true,
                        "connection_name": "dynamic analysis results",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "Comment waiting for dynamic",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "fa253efe-475a-44f6-a3be-5d7f002ba882",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 509,
                        "line_start": 499,
                        "message": "Configuring now",
                        "name": "add comment",
                        "notes": "Waiting for dynamic analysis results",
                        "number": 2,
                        "order": 18,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1240,
                            "y": -160
                        },
                        "previous_function": "",
                        "previous_name": "Comment_waiting_for_dynamic",
                        "refetch_container": true,
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "api",
                        "status": "",
                        "title": "API",
                        "type": "coa.API",
                        "warn": false,
                        "z": 317
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "api": "add comment",
                        "attrs": {
                            ".api": {
                                "text": "Comment waiting sampl...."
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "API"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def Comment_waiting_sample_upload(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Comment_waiting_sample_upload() called')\n\n    phantom.comment(container=container, comment=\"Waiting for sample to be available in the TitaniumCloud\")\n\n    container = phantom.get_container(container.get('id', None))\n    join_submit_for_dynamic(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "color": "",
                        "configured": [
                            {
                                "addCommentComment": "Waiting for sample to be available in the TitaniumCloud",
                                "key": "add-comment"
                            }
                        ],
                        "connected_to_start": true,
                        "connection_name": "submit for dynamic",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "Comment waiting sample upload",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "de6d7421-1786-4302-bed0-3a582e5d42c7",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 499,
                        "line_start": 489,
                        "message": "Configuring now",
                        "name": "add comment",
                        "notes": "Waiting for sample to be available in the TitaniumCloud",
                        "number": 1,
                        "order": 17,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 800,
                            "y": -300
                        },
                        "previous_function": "",
                        "previous_name": "Comment_waiting_sample_upload",
                        "refetch_container": true,
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "api",
                        "status": "",
                        "title": "API",
                        "type": "coa.API",
                        "warn": false,
                        "z": 319
                    },
                    {
                        ".scmName/text": "community",
                        "active": false,
                        "active_keys": {},
                        "active_values": {},
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".customFunction": {
                                "text": "container update 1"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".scmName": {
                                "text": "community"
                            },
                            ".title": {
                                "text": "custom function"
                            },
                            ".title-info": {
                                "text": ""
                            },
                            "g.branch image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def container_update_1(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('container_update_1() called')\n    \n    container_property_0 = [\n        [\n            container.get(\"id\"),\n        ],\n    ]\n    literal_values_0 = [\n        [\n            \"open\",\n        ],\n    ]\n\n    parameters = []\n\n    for item0 in literal_values_0:\n        for item1 in container_property_0:\n            parameters.append({\n                'name': None,\n                'tags': None,\n                'label': None,\n                'owner': None,\n                'status': item0[0],\n                'severity': None,\n                'input_json': None,\n                'description': None,\n                'sensitivity': None,\n                'container_input': item1[0],\n            })\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################    \n\n    # call custom function \"community/container_update\", returns the custom_function_run_id\n    phantom.custom_function(custom_function='community/container_update', parameters=parameters, name='container_update_1', callback=submit_indicator)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "cfDisplayPath": "community/container_update",
                        "cfInputs": {
                            "container_input": {
                                "collectionType": "container_property",
                                "dataPath": "container:id",
                                "paramName": "item1[0]",
                                "type": "item"
                            },
                            "description": {
                                "dataPath": "",
                                "type": "item"
                            },
                            "input_json": {
                                "dataPath": "",
                                "type": "item"
                            },
                            "label": {
                                "dataPath": "",
                                "type": "item"
                            },
                            "name": {
                                "dataPath": "",
                                "type": "item"
                            },
                            "owner": {
                                "dataPath": "",
                                "type": "item"
                            },
                            "sensitivity": {
                                "dataPath": "",
                                "type": "item"
                            },
                            "severity": {
                                "dataPath": "",
                                "type": "item"
                            },
                            "status": {
                                "collectionType": "literal_values",
                                "dataPath": "open",
                                "paramName": "item0[0]",
                                "type": "item"
                            },
                            "tags": {
                                "dataPath": "",
                                "type": "item"
                            }
                        },
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "set_malicious",
                        "connection_type": "action",
                        "container_input-0": "container:id",
                        "currentVersion": true,
                        "customCodeEndLineOffset": 7,
                        "customCodeStartLine": 33,
                        "customFunction": "community/container_update",
                        "customFunctionId": null,
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "container update 1",
                        "delay": 0,
                        "description": "",
                        "draftMode": false,
                        "existingCF": true,
                        "functionBlock": "custom function",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "773e8f04-3fe7-4750-af5b-8ec09dbd62a4",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 193,
                        "line_end": 164,
                        "line_start": 119,
                        "message": "Configuring now",
                        "name": "container_update",
                        "notes": "Update container regarding to malicious result",
                        "number": 1,
                        "order": 6,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 420,
                            "y": 80
                        },
                        "previous_function": "",
                        "previous_name": "container_update_1",
                        "selectedCustomFunction": {
                            "description": "Allows updating various attributes of a container in a single custom function. Any attributes of a container not listed can be updated via the input_json parameter. ",
                            "draftMode": false,
                            "id": 7,
                            "inputs": [
                                {
                                    "_pretty_custom_function": "container_update",
                                    "contains_type": [
                                        "phantom container id"
                                    ],
                                    "custom_function": 7,
                                    "description": "Supports a container id or container dictionary",
                                    "id": 33,
                                    "input_type": "item",
                                    "name": "container_input",
                                    "placeholder": "container:id"
                                },
                                {
                                    "_pretty_custom_function": "container_update",
                                    "contains_type": [],
                                    "custom_function": 7,
                                    "description": "Optional parameter to change container name",
                                    "id": 34,
                                    "input_type": "item",
                                    "name": "name",
                                    "placeholder": "My Container Name"
                                },
                                {
                                    "_pretty_custom_function": "container_update",
                                    "contains_type": [],
                                    "custom_function": 7,
                                    "description": "Optional parameter to change the container description",
                                    "id": 35,
                                    "input_type": "item",
                                    "name": "description",
                                    "placeholder": "My Container Description"
                                },
                                {
                                    "_pretty_custom_function": "container_update",
                                    "contains_type": [
                                        "phantom container label"
                                    ],
                                    "custom_function": 7,
                                    "description": "Optional parameter to change the container label",
                                    "id": 36,
                                    "input_type": "item",
                                    "name": "label",
                                    "placeholder": "my_label"
                                },
                                {
                                    "_pretty_custom_function": "container_update",
                                    "contains_type": [],
                                    "custom_function": 7,
                                    "description": "Optional parameter to change the container owner. Accepts a username or role name or keyword \"current\" to set the currently running playbook user as the owner.",
                                    "id": 37,
                                    "input_type": "item",
                                    "name": "owner",
                                    "placeholder": "admin"
                                },
                                {
                                    "_pretty_custom_function": "container_update",
                                    "contains_type": [],
                                    "custom_function": 7,
                                    "description": "Optional parameter to change the container sensitivity. ",
                                    "id": 38,
                                    "input_type": "item",
                                    "name": "sensitivity",
                                    "placeholder": "amber"
                                },
                                {
                                    "_pretty_custom_function": "container_update",
                                    "contains_type": [],
                                    "custom_function": 7,
                                    "description": "Optional parameter to change the container severity.",
                                    "id": 39,
                                    "input_type": "item",
                                    "name": "severity",
                                    "placeholder": "medium"
                                },
                                {
                                    "_pretty_custom_function": "container_update",
                                    "contains_type": [],
                                    "custom_function": 7,
                                    "description": "Optional parameter to change the container status.",
                                    "id": 40,
                                    "input_type": "item",
                                    "name": "status",
                                    "placeholder": "open"
                                },
                                {
                                    "_pretty_custom_function": "container_update",
                                    "contains_type": [],
                                    "custom_function": 7,
                                    "description": "Optional parameter to change the container tags. Must be in the format of a comma separated list.",
                                    "id": 41,
                                    "input_type": "item",
                                    "name": "tags",
                                    "placeholder": "tag1, tag2"
                                },
                                {
                                    "_pretty_custom_function": "container_update",
                                    "contains_type": [],
                                    "custom_function": 7,
                                    "description": "Optional parameter to modify any extra attributes of a container. Input_json will be merged with other inputs. In the event of a conflict, input_json will take precedence.",
                                    "id": 42,
                                    "input_type": "item",
                                    "name": "input_json",
                                    "placeholder": "{\"custom_fields\": {\"field_name\": \"field_value\"}}"
                                }
                            ],
                            "name": "container_update",
                            "outputs": [],
                            "playbooks": {
                                "draft_playbooks": [],
                                "draft_version_id": null,
                                "playbooks": [
                                    {
                                        "active": false,
                                        "display_path": "community/risk_notable_preprocess",
                                        "draft_mode": false,
                                        "id": 85,
                                        "is_modern": true,
                                        "name": "risk_notable_preprocess",
                                        "playbook_type": "automation",
                                        "viewable": true
                                    },
                                    {
                                        "active": false,
                                        "display_path": "local/ReversingLabs_TitaniumCloud_Malware_Triage",
                                        "draft_mode": false,
                                        "id": 367,
                                        "is_modern": true,
                                        "name": "ReversingLabs_TitaniumCloud_Malware_Triage",
                                        "playbook_type": "automation",
                                        "viewable": true
                                    }
                                ]
                            },
                            "scmId": 1,
                            "scmName": "community"
                        },
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "repo",
                        "status": "",
                        "status-7": "open",
                        "title": "custom function",
                        "type": "coa.CustomFunctionBlock",
                        "userGeneratedCode": "    # Write your custom code here...",
                        "warn": false,
                        "z": 321
                    },
                    {
                        "action": "submit indicator",
                        "action_type": "generic",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "action": "Alert",
                            "application": "",
                            "description": "hash",
                            "expiration_time": "",
                            "indicator_type": "FileSha1",
                            "indicator_value": "filtered-data:check_status:condition_1:file_reputation:action_result.parameter.hash",
                            "rbac_group_names": "",
                            "recommended_actions": "",
                            "severity": "",
                            "title": "indicator"
                        },
                        "angle": 0,
                        "app": "",
                        "appid": "e85407b7-91f0-4019-8fa4-0d29bca741d5",
                        "approver": "",
                        "assets": [
                            {
                                "action": "submit indicator",
                                "actions": [
                                    "get missing kbs",
                                    "run script",
                                    "put file",
                                    "get file",
                                    "get secure score",
                                    "get exposure score",
                                    "remove app restriction",
                                    "get discovered vulnerabilities",
                                    "update device tag",
                                    "get domain devices",
                                    "run query",
                                    "delete indicator",
                                    "submit indicator",
                                    "list indicators",
                                    "restrict app execution",
                                    "get installed software",
                                    "get user devices",
                                    "get file devices",
                                    "get file info",
                                    "file prevalence",
                                    "ip prevalence",
                                    "domain prevalence",
                                    "update alert",
                                    "get alert",
                                    "list sessions",
                                    "list alerts",
                                    "list devices",
                                    "quarantine file",
                                    "scan device",
                                    "get status",
                                    "unquarantine device",
                                    "quarantine device",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "Windows Defender ATP",
                                "app_version": "3.8.0",
                                "appid": "e85407b7-91f0-4019-8fa4-0d29bca741d5",
                                "asset_name": "defender-atp-test",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "action": "Alert",
                                    "application": "",
                                    "description": "hash",
                                    "expiration_time": "",
                                    "indicator_type": "FileSha1",
                                    "indicator_value": "filtered-data:check_status:condition_1:file_reputation:action_result.parameter.hash",
                                    "rbac_group_names": "",
                                    "recommended_actions": "",
                                    "severity": "",
                                    "title": "indicator"
                                },
                                "has_app": true,
                                "id": 68,
                                "loaded": false,
                                "missing": false,
                                "name": "defender-atp-test",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.action",
                                        "data_type": "string",
                                        "example_values": [
                                            "Alert",
                                            "Warn",
                                            "Block",
                                            "Audit",
                                            "BlockAndRemediate",
                                            "AlertAndBlock",
                                            "Allowed"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.application",
                                        "data_type": "string",
                                        "example_values": [
                                            "Test App"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.description",
                                        "data_type": "string",
                                        "example_values": [
                                            "Test 1"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.expiration_time",
                                        "data_type": "string",
                                        "example_values": [
                                            "2021-09-07T00:00:00Z"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.indicator_type",
                                        "data_type": "string",
                                        "example_values": [
                                            "FileSha1",
                                            "FileMd5",
                                            "CertificateThumbprint",
                                            "FileSha256",
                                            "IpAddress",
                                            "DomainName",
                                            "Url"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "defender atp indicator value",
                                            "sha1",
                                            "sha256",
                                            "md5",
                                            "ip",
                                            "ipv6",
                                            "url",
                                            "domain"
                                        ],
                                        "data_path": "action_result.parameter.indicator_value",
                                        "data_type": "string",
                                        "example_values": [
                                            "domain.com"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.rbac_group_names",
                                        "data_type": "string",
                                        "example_values": [
                                            "[\"Group1\", \"Group2\"]"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.recommended_actions",
                                        "data_type": "string",
                                        "example_values": [
                                            "Test Actions"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.severity",
                                        "data_type": "string",
                                        "example_values": [
                                            "Low"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.title",
                                        "data_type": "string",
                                        "example_values": [
                                            "Test 1"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.@odata.context",
                                        "data_type": "string",
                                        "example_values": [
                                            "https://api.securitycenter.windows.com/api/$metadata#Indicators/$entity"
                                        ]
                                    },
                                    {
                                        "column_name": "Action",
                                        "column_order": 2,
                                        "data_path": "action_result.data.*.action",
                                        "data_type": "string",
                                        "example_values": [
                                            "Alert",
                                            "Warn",
                                            "Block",
                                            "Audit",
                                            "BlockAndRemediate",
                                            "AlertAndBlock",
                                            "Allowed"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.additionalInfo",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.application",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.bypassDurationHours",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.category",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.certificateInfo",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.createdBy",
                                        "data_type": "string",
                                        "example_values": [
                                            "65265db5-a7ca-4199-a425-f37ad1dd6d31"
                                        ]
                                    },
                                    {
                                        "column_name": "Created By",
                                        "column_order": 4,
                                        "data_path": "action_result.data.*.createdByDisplayName",
                                        "data_type": "string",
                                        "example_values": [
                                            "WindowsDefenderATPSiemConnector"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.createdBySource",
                                        "data_type": "string",
                                        "example_values": [
                                            "PublicApi"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.creationTimeDateTimeUtc",
                                        "data_type": "string",
                                        "example_values": [
                                            "2021-08-27T12:50:54.882519Z"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.description",
                                        "data_type": "string",
                                        "example_values": [
                                            "Test 1"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.educateUrl",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.expirationTime",
                                        "data_type": "string",
                                        "example_values": [
                                            "2021-09-07T00:00:00Z"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.externalId",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.generateAlert",
                                        "data_type": "boolean",
                                        "example_values": [
                                            false,
                                            true
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.historicalDetection",
                                        "data_type": "boolean",
                                        "example_values": [
                                            false,
                                            true
                                        ]
                                    },
                                    {
                                        "column_name": "Indicator ID",
                                        "column_order": 0,
                                        "contains": [
                                            "defender atp indicator id"
                                        ],
                                        "data_path": "action_result.data.*.id",
                                        "data_type": "string",
                                        "example_values": [
                                            "17"
                                        ]
                                    },
                                    {
                                        "column_name": "Indicator Type",
                                        "column_order": 5,
                                        "data_path": "action_result.data.*.indicatorType",
                                        "data_type": "string",
                                        "example_values": [
                                            "FileSha1",
                                            "FileMd5",
                                            "CertificateThumbprint",
                                            "FileSha256",
                                            "IpAddress",
                                            "DomainName",
                                            "Url"
                                        ]
                                    },
                                    {
                                        "column_name": "Indicator Value",
                                        "column_order": 6,
                                        "contains": [
                                            "defender atp indicator value",
                                            "ip",
                                            "ipv6",
                                            "sha1",
                                            "sha256",
                                            "md5",
                                            "domain",
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.indicatorValue",
                                        "data_type": "string",
                                        "example_values": [
                                            "test.com"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.lastUpdateTime",
                                        "data_type": "string",
                                        "example_values": [
                                            "2021-08-27T12:55:42.0621261Z"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.lastUpdatedBy",
                                        "data_type": "string",
                                        "example_values": [
                                            "65265db5-a7ca-4199-a425-f37ad1dd6d31"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.lookBackPeriod",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.notificationBody",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.notificationId",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.recommendedActions",
                                        "data_type": "string",
                                        "example_values": [
                                            "Test Actions"
                                        ]
                                    },
                                    {
                                        "column_name": "Severity",
                                        "column_order": 3,
                                        "data_path": "action_result.data.*.severity",
                                        "data_type": "string",
                                        "example_values": [
                                            "Low"
                                        ]
                                    },
                                    {
                                        "column_name": "Title",
                                        "column_order": 1,
                                        "data_path": "action_result.data.*.title",
                                        "data_type": "string",
                                        "example_values": [
                                            "Test 1"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.version",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "defender atp indicator id"
                                        ],
                                        "data_path": "action_result.summary.indicator_id",
                                        "data_type": "string",
                                        "example_values": [
                                            "17"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Indicator id: 17"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "action": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "The action that will be taken if the indicator will be discovered in the organization",
                                        "key": "action",
                                        "order": 4,
                                        "required": true
                                    },
                                    "application": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "The application associated with the indicator",
                                        "key": "application",
                                        "order": 5,
                                        "required": false
                                    },
                                    "description": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Description of the indicator",
                                        "key": "description",
                                        "order": 1,
                                        "required": true
                                    },
                                    "expiration_time": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "The expiration time of the indicator (Use this format: %Y-%m-%dT%H:%M:%SZ in UTC timezone)",
                                        "key": "expiration_time",
                                        "order": 6,
                                        "required": false
                                    },
                                    "indicator_type": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Type of the indicator",
                                        "key": "indicator_type",
                                        "order": 2,
                                        "required": true
                                    },
                                    "indicator_value": {
                                        "contains": [
                                            "defender atp indicator value",
                                            "sha1",
                                            "sha256",
                                            "md5",
                                            "ip",
                                            "ipv6",
                                            "url",
                                            "domain"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Identity of the Indicator entity",
                                        "key": "indicator_value",
                                        "order": 3,
                                        "primary": true,
                                        "required": true
                                    },
                                    "rbac_group_names": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "RBAC group names the indicator would be applied to (JSON formatted list)",
                                        "key": "rbac_group_names",
                                        "order": 9,
                                        "required": false
                                    },
                                    "recommended_actions": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "TI indicator alert recommended actions",
                                        "key": "recommended_actions",
                                        "order": 8,
                                        "required": false
                                    },
                                    "severity": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "The severity of the indicator",
                                        "key": "severity",
                                        "order": 7,
                                        "required": false,
                                        "value_list": [
                                            "Informational",
                                            "Low",
                                            "Medium",
                                            "High"
                                        ]
                                    },
                                    "title": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Indicator alert title",
                                        "key": "title",
                                        "order": 0,
                                        "required": true
                                    }
                                },
                                "product_name": "Windows Defender ATP",
                                "product_vendor": "Microsoft",
                                "targets": "68",
                                "type": "endpoint"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "submit indicator"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Generic"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_generic.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def submit_indicator(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('submit_indicator() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'submit_indicator' call\n    filtered_results_data_1 = phantom.collect2(container=container, datapath=[\"filtered-data:check_status:condition_1:file_reputation:action_result.parameter.hash\", \"filtered-data:check_status:condition_1:file_reputation:action_result.parameter.context.artifact_id\"])\n\n    parameters = []\n    \n    # build parameters list for 'submit_indicator' call\n    for filtered_results_item_1 in filtered_results_data_1:\n        if filtered_results_item_1[0]:\n            parameters.append({\n                'title': \"indicator\",\n                'action': \"Alert\",\n                'severity': \"\",\n                'application': \"\",\n                'description': \"hash\",\n                'indicator_type': \"FileSha1\",\n                'expiration_time': \"\",\n                'indicator_value': filtered_results_item_1[0],\n                'rbac_group_names': \"\",\n                'recommended_actions': \"\",\n                # context (artifact id) is added to associate results with the artifact\n                'context': {'artifact_id': filtered_results_item_1[1]},\n            })\n\n    phantom.act(action=\"submit indicator\", parameters=parameters, assets=['defender-atp-test'], callback=quarantine_device, name=\"submit_indicator\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "container update 1",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "submit indicator",
                        "delay": 0,
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "0dd084ac-d2c1-4179-a534-4766c00e1bd5",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 196,
                        "line_start": 164,
                        "message": "Configuring now",
                        "name": "submit indicator",
                        "notes": "Submit indicator with Defender ATP",
                        "number": 1,
                        "order": 7,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 660,
                            "y": 80
                        },
                        "previous_function": "",
                        "previous_name": "submit_indicator",
                        "required_params": {
                            "action": true,
                            "description": true,
                            "indicator_type": true,
                            "indicator_value": true,
                            "title": true
                        },
                        "reviewer": "",
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "action_assets",
                        "status": "",
                        "title": "Generic",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 322
                    },
                    {
                        "action": "quarantine device",
                        "action_type": "contain",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "comment": "quarantined",
                            "device_id": "bb972ddb60a00a85302c2fa578974ed7868bd8e7",
                            "timeout": 30,
                            "type": "Full"
                        },
                        "angle": 0,
                        "app": "",
                        "appid": "e85407b7-91f0-4019-8fa4-0d29bca741d5",
                        "approver": "",
                        "assets": [
                            {
                                "action": "quarantine device",
                                "actions": [
                                    "get missing kbs",
                                    "run script",
                                    "put file",
                                    "get file",
                                    "get secure score",
                                    "get exposure score",
                                    "remove app restriction",
                                    "get discovered vulnerabilities",
                                    "update device tag",
                                    "get domain devices",
                                    "run query",
                                    "delete indicator",
                                    "submit indicator",
                                    "list indicators",
                                    "restrict app execution",
                                    "get installed software",
                                    "get user devices",
                                    "get file devices",
                                    "get file info",
                                    "file prevalence",
                                    "ip prevalence",
                                    "domain prevalence",
                                    "update alert",
                                    "get alert",
                                    "list sessions",
                                    "list alerts",
                                    "list devices",
                                    "quarantine file",
                                    "scan device",
                                    "get status",
                                    "unquarantine device",
                                    "quarantine device",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "Windows Defender ATP",
                                "app_version": "3.8.0",
                                "appid": "e85407b7-91f0-4019-8fa4-0d29bca741d5",
                                "asset_name": "defender-atp-test",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "comment": "quarantined",
                                    "device_id": "bb972ddb60a00a85302c2fa578974ed7868bd8e7",
                                    "timeout": 30,
                                    "type": "Full"
                                },
                                "has_app": true,
                                "id": 68,
                                "loaded": false,
                                "missing": false,
                                "name": "defender-atp-test",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "column_name": "Comment",
                                        "column_order": 2,
                                        "data_path": "action_result.parameter.comment",
                                        "data_type": "string",
                                        "example_values": [
                                            "selective quarantine"
                                        ]
                                    },
                                    {
                                        "column_name": "Device ID",
                                        "column_order": 0,
                                        "contains": [
                                            "defender atp device id"
                                        ],
                                        "data_path": "action_result.parameter.device_id",
                                        "data_type": "string",
                                        "example_values": [
                                            "7af22c8a3f92ec0c9c49b80aee3379bf9bfa0768"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.timeout",
                                        "data_type": "numeric",
                                        "example_values": [
                                            130
                                        ]
                                    },
                                    {
                                        "column_name": "Quarantine Type",
                                        "column_order": 1,
                                        "data_path": "action_result.parameter.type",
                                        "data_type": "string",
                                        "example_values": [
                                            "Full"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.@odata.context",
                                        "data_type": "string",
                                        "example_values": [
                                            "https://api.securitycenter.windows.com/api/$metadata#MachineActions/$entity"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.cancellationComment",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.cancellationDateTimeUtc",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.cancellationRequestor",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.computerDnsName",
                                        "data_type": "string",
                                        "example_values": [
                                            "win10atp2"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.creationDateTimeUtc",
                                        "data_type": "string",
                                        "example_values": [
                                            "2019-05-03T08:50:05.8076226Z"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.error",
                                        "data_type": "string",
                                        "example_values": [
                                            "None"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.errorHResult",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.externalId",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Event ID",
                                        "column_order": 3,
                                        "contains": [
                                            "defender atp event id"
                                        ],
                                        "data_path": "action_result.data.*.id",
                                        "data_type": "string",
                                        "example_values": [
                                            "6925706d-3a7e-4596-b2d7-321fca9cd965"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.lastUpdateDateTimeUtc",
                                        "data_type": "string",
                                        "example_values": [
                                            "2019-05-03T08:50:05.8076226Z"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "defender atp device id"
                                        ],
                                        "data_path": "action_result.data.*.machineId",
                                        "data_type": "string",
                                        "example_values": [
                                            "349838747f77ec74e43ab7ca70773a41f7bfb6f2"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.relatedFileInfo",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.requestSource",
                                        "data_type": "string",
                                        "example_values": [
                                            "PublicApi"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "email"
                                        ],
                                        "data_path": "action_result.data.*.requestor",
                                        "data_type": "string",
                                        "example_values": [
                                            "testuser@example.com"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.requestorComment",
                                        "data_type": "string",
                                        "example_values": [
                                            "Selective",
                                            "test"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.scope",
                                        "data_type": "string",
                                        "example_values": [
                                            "Full"
                                        ]
                                    },
                                    {
                                        "column_name": "Quarantine Status",
                                        "column_order": 5,
                                        "data_path": "action_result.data.*.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "Succeeded"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.title",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.troubleshootInfo",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Event Type",
                                        "column_order": 4,
                                        "data_path": "action_result.data.*.type",
                                        "data_type": "string",
                                        "example_values": [
                                            "Isolate"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "defender atp event id"
                                        ],
                                        "data_path": "action_result.summary.event_id",
                                        "data_type": "string",
                                        "example_values": [
                                            "6925706d-3a7e-4596-b2d7-321fca9cd965"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.quarantine_status",
                                        "data_type": "string",
                                        "example_values": [
                                            "Pending"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Event id: 6925706d-3a7e-4596-b2d7-321fca9cd965, Quarantine status: Pending"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "comment": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Comment for quarantine",
                                        "key": "comment",
                                        "order": 2,
                                        "required": true
                                    },
                                    "device_id": {
                                        "contains": [
                                            "defender atp device id"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "ID of the device to quarantine",
                                        "key": "device_id",
                                        "order": 0,
                                        "primary": true,
                                        "required": true
                                    },
                                    "timeout": {
                                        "data_type": "numeric",
                                        "default": 30,
                                        "description": "Timeout in seconds (Default: 30)",
                                        "key": "timeout",
                                        "order": 3,
                                        "required": false
                                    },
                                    "type": {
                                        "data_type": "string",
                                        "default": "Full",
                                        "description": "Type of quarantine (Default: Full)",
                                        "key": "type",
                                        "order": 1,
                                        "required": true,
                                        "value_list": [
                                            "Full",
                                            "Selective"
                                        ]
                                    }
                                },
                                "product_name": "Windows Defender ATP",
                                "product_vendor": "Microsoft",
                                "targets": "68",
                                "type": "endpoint"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "quarantine device"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Contain"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_contain.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def quarantine_device(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('quarantine_device() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'quarantine_device' call\n\n    parameters = []\n    \n    # build parameters list for 'quarantine_device' call\n    parameters.append({\n        'type': \"Full\",\n        'comment': \"quarantined\",\n        'timeout': 30,\n        'device_id': \"bb972ddb60a00a85302c2fa578974ed7868bd8e7\",\n    })\n\n    phantom.act(action=\"quarantine device\", parameters=parameters, assets=['defender-atp-test'], name=\"quarantine_device\", parent_action=action)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "submit indicator",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "quarantine device",
                        "delay": 0,
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "1aae0e9d-8751-4a8b-a8b2-f635b6d297d2",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 217,
                        "line_start": 196,
                        "message": "Configuring now",
                        "name": "quarantine device",
                        "notes": "Quarantine device with Defender ATP",
                        "number": 1,
                        "order": 8,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 900,
                            "y": 80
                        },
                        "previous_function": "",
                        "previous_name": "quarantine_device",
                        "required_params": {
                            "comment": true,
                            "device_id": true,
                            "type": true
                        },
                        "reviewer": "",
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "action_assets",
                        "status": "",
                        "title": "Contain",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 323
                    },
                    {
                        ".scmName/text": "local",
                        "active": false,
                        "active_keys": {},
                        "active_values": {},
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".customFunction": {
                                "text": "check for malicious"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".scmName": {
                                "text": "local"
                            },
                            ".title": {
                                "text": "custom function"
                            },
                            ".title-info": {
                                "text": ""
                            },
                            "g.branch image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def check_for_malicious(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('check_for_malicious() called')\n    \n    parameters = [{}]\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################    \n\n    # call custom function \"local/check_for_malicious\", returns the custom_function_run_id\n    phantom.custom_function(custom_function='local/check_for_malicious', parameters=parameters, name='check_for_malicious', callback=decision_6)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "cfDisplayPath": "local/check_for_malicious",
                        "cfInputs": {},
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "dynamic analysis results, file reputation",
                        "connection_type": "action",
                        "currentVersion": true,
                        "customCodeEndLineOffset": 7,
                        "customCodeStartLine": 8,
                        "customFunction": "local/check_for_malicious",
                        "customFunctionId": null,
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "check for malicious",
                        "delay": 0,
                        "description": "",
                        "draftMode": false,
                        "existingCF": true,
                        "functionBlock": "custom function",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "3c51296a-f910-4d84-9e96-7f14b6cd75cc",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "def join_check_for_malicious(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None):\n    phantom.debug('join_check_for_malicious() called')\n    \n    # if the joined function has already been called, do nothing\n    if phantom.get_run_data(key='join_check_for_malicious_called'):\n        return\n\n    # check if all connected incoming playbooks, actions, or custom functions are done i.e. have succeeded or failed\n    if phantom.completed(action_names=['dynamic_analysis_results', 'file_reputation']):\n        \n        # save the state that the joined function has now been called\n        phantom.save_run_data(key='join_check_for_malicious_called', value='check_for_malicious')\n        \n        # call connected block \"check_for_malicious\"\n        check_for_malicious(container=container, handle=handle)\n    \n    return",
                        "join_optional": [
                            "file_reputation_1",
                            "dynamic_analysis_results_1"
                        ],
                        "join_start": 405,
                        "line_end": 423,
                        "line_start": 385,
                        "message": "Configuring now",
                        "name": "check_for_malicious",
                        "notes": "Check for has_malicious flag",
                        "number": 1,
                        "order": 14,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 920,
                            "y": 380
                        },
                        "previous_function": "",
                        "previous_name": "check_for_malicious",
                        "selectedCustomFunction": {
                            "description": "",
                            "draftMode": false,
                            "id": 43,
                            "inputs": [],
                            "name": "check_for_malicious",
                            "outputs": [
                                {
                                    "_pretty_custom_function": "check_for_malicious",
                                    "contains_type": [],
                                    "custom_function": 43,
                                    "data_path": "malicious_exists",
                                    "description": "",
                                    "id": 118
                                }
                            ],
                            "playbooks": {
                                "draft_playbooks": [],
                                "draft_version_id": null,
                                "playbooks": []
                            },
                            "scmId": 2,
                            "scmName": "local"
                        },
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "repo",
                        "status": "",
                        "title": "custom function",
                        "type": "coa.CustomFunctionBlock",
                        "userGeneratedCode": "    # Write your custom code here...",
                        "warn": false,
                        "z": 324
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#637282",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 5
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".outPorts>.port-1": {
                                "port": {
                                    "id": "out-2",
                                    "type": "out"
                                },
                                "ref-x": 41,
                                "ref-y": 82
                            },
                            ".outPorts>.port-1>.port-body": {
                                "port": {
                                    "id": "out-2",
                                    "type": "out"
                                }
                            },
                            ".outPorts>.port-2": {
                                "port": {
                                    "id": "out-3",
                                    "type": "out"
                                },
                                "ref-x": 41,
                                "ref-y": -2
                            },
                            ".outPorts>.port-2>.port-body": {
                                "port": {
                                    "id": "out-3",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def descision_5(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('descision_5() called')\n\n    # check for 'if' condition 1\n    matched = phantom.decision(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"dynamic_analysis_results:action_result.data.*.rl.report.classification\", \"==\", \"CLEAN\"],\n        ])\n\n    # call connected blocks if condition 1 matched\n    if matched:\n        join_check_for_malicious(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n        return\n\n    # check for 'elif' condition 2\n    matched = phantom.decision(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"dynamic_analysis_results:action_result.data.*.rl.report.classification\", \"==\", \"MALICIOUS\"],\n        ])\n\n    # call connected blocks if condition 2 matched\n    if matched:\n        join_set_malicious(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n        return\n\n    # call connected blocks for 'else' condition 3\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "dynamic analysis results",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "descision 5",
                        "description": "",
                        "hasElse": true,
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "a2455802-e3b2-49d3-815c-c75868762b65",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 309,
                        "line_start": 276,
                        "name": "decision",
                        "notes": "Check dynamic analysis classification",
                        "number": 5,
                        "order": 11,
                        "outPorts": [
                            "out-1",
                            "out-2",
                            "out-3"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "dynamic_analysis_results:action_result.data.*.rl.report.classification",
                                        "value": "CLEAN"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            },
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "dynamic_analysis_results:action_result.data.*.rl.report.classification",
                                        "value": "MALICIOUS"
                                    }
                                ],
                                "display": "Else If",
                                "logic": "and",
                                "type": "elif"
                            },
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "",
                                        "value": ""
                                    }
                                ],
                                "display": "Else",
                                "logic": "and",
                                "type": "else"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1080,
                            "y": -60
                        },
                        "previous_function": "",
                        "previous_name": "descision_5",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "decision",
                        "status": "",
                        "type": "coa.Decision",
                        "warn": "",
                        "z": 325
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#637282",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 6
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".outPorts>.port-1": {
                                "port": {
                                    "id": "out-2",
                                    "type": "out"
                                },
                                "ref-x": 41,
                                "ref-y": 82
                            },
                            ".outPorts>.port-1>.port-body": {
                                "port": {
                                    "id": "out-2",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def decision_6(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('decision_6() called')\n\n    # check for 'if' condition 1\n    matched = phantom.decision(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"check_for_malicious:custom_function_result.data.malicious_exists\", \"==\", \"false\"],\n        ])\n\n    # call connected blocks if condition 1 matched\n    if matched:\n        container_update_2(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n        return\n\n    # call connected blocks for 'else' condition 2\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "check for malicious",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "decision 6",
                        "description": "",
                        "hasElse": true,
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "23373ceb-4520-4996-9c21-ff7167dd72de",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 443,
                        "line_start": 423,
                        "name": "decision",
                        "notes": "Check for has_malicious",
                        "number": 6,
                        "order": 15,
                        "outPorts": [
                            "out-1",
                            "out-2"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "check_for_malicious:custom_function_result.data.malicious_exists",
                                        "value": "false"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            },
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "",
                                        "value": ""
                                    }
                                ],
                                "display": "Else",
                                "logic": "and",
                                "type": "else"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1140,
                            "y": 380
                        },
                        "previous_function": "",
                        "previous_name": "decision_6",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "decision",
                        "status": "",
                        "type": "coa.Decision",
                        "warn": "",
                        "z": 326
                    },
                    {
                        ".scmName/text": "community",
                        "active": false,
                        "active_keys": {},
                        "active_values": {},
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".customFunction": {
                                "text": "container update 2"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".scmName": {
                                "text": "community"
                            },
                            ".title": {
                                "text": "custom function"
                            },
                            ".title-info": {
                                "text": ""
                            },
                            "g.branch image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def container_update_2(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('container_update_2() called')\n    \n    container_property_0 = [\n        [\n            container.get(\"id\"),\n        ],\n    ]\n    literal_values_0 = [\n        [\n            \"closed\",\n        ],\n    ]\n\n    parameters = []\n\n    for item0 in literal_values_0:\n        for item1 in container_property_0:\n            parameters.append({\n                'name': None,\n                'tags': None,\n                'label': None,\n                'owner': None,\n                'status': item0[0],\n                'severity': None,\n                'input_json': None,\n                'description': None,\n                'sensitivity': None,\n                'container_input': item1[0],\n            })\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################    \n\n    # call custom function \"community/container_update\", returns the custom_function_run_id\n    phantom.custom_function(custom_function='community/container_update', parameters=parameters, name='container_update_2')\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "cfDisplayPath": "community/container_update",
                        "cfInputs": {
                            "container_input": {
                                "collectionType": "container_property",
                                "dataPath": "container:id",
                                "paramName": "item1[0]",
                                "type": "item"
                            },
                            "description": {
                                "dataPath": "",
                                "type": "item"
                            },
                            "input_json": {
                                "dataPath": "",
                                "type": "item"
                            },
                            "label": {
                                "dataPath": "",
                                "type": "item"
                            },
                            "name": {
                                "dataPath": "",
                                "type": "item"
                            },
                            "owner": {
                                "dataPath": "",
                                "type": "item"
                            },
                            "sensitivity": {
                                "dataPath": "",
                                "type": "item"
                            },
                            "severity": {
                                "dataPath": "",
                                "type": "item"
                            },
                            "status": {
                                "collectionType": "literal_values",
                                "dataPath": "closed",
                                "paramName": "item0[0]",
                                "type": "item"
                            },
                            "tags": {
                                "dataPath": "",
                                "type": "item"
                            }
                        },
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "check for malicious",
                        "connection_type": "action",
                        "container_input-0": "container:id",
                        "currentVersion": true,
                        "customCodeEndLineOffset": 7,
                        "customCodeStartLine": 33,
                        "customFunction": "community/container_update",
                        "customFunctionId": null,
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "container update 2",
                        "delay": 0,
                        "description": "",
                        "draftMode": false,
                        "existingCF": true,
                        "functionBlock": "custom function",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "1959fc8e-4e1b-431c-8cb5-a9d91d49136f",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 387,
                        "line_end": 354,
                        "line_start": 309,
                        "message": "Configuring now",
                        "name": "container_update",
                        "notes": "Close container if there was no malicious hashes",
                        "number": 2,
                        "order": 12,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1280,
                            "y": 380
                        },
                        "previous_function": "",
                        "previous_name": "container_update_2",
                        "selectedCustomFunction": {
                            "description": "Allows updating various attributes of a container in a single custom function. Any attributes of a container not listed can be updated via the input_json parameter. ",
                            "draftMode": false,
                            "id": 7,
                            "inputs": [
                                {
                                    "_pretty_custom_function": "container_update",
                                    "contains_type": [
                                        "phantom container id"
                                    ],
                                    "custom_function": 7,
                                    "description": "Supports a container id or container dictionary",
                                    "id": 33,
                                    "input_type": "item",
                                    "name": "container_input",
                                    "placeholder": "container:id"
                                },
                                {
                                    "_pretty_custom_function": "container_update",
                                    "contains_type": [],
                                    "custom_function": 7,
                                    "description": "Optional parameter to change container name",
                                    "id": 34,
                                    "input_type": "item",
                                    "name": "name",
                                    "placeholder": "My Container Name"
                                },
                                {
                                    "_pretty_custom_function": "container_update",
                                    "contains_type": [],
                                    "custom_function": 7,
                                    "description": "Optional parameter to change the container description",
                                    "id": 35,
                                    "input_type": "item",
                                    "name": "description",
                                    "placeholder": "My Container Description"
                                },
                                {
                                    "_pretty_custom_function": "container_update",
                                    "contains_type": [
                                        "phantom container label"
                                    ],
                                    "custom_function": 7,
                                    "description": "Optional parameter to change the container label",
                                    "id": 36,
                                    "input_type": "item",
                                    "name": "label",
                                    "placeholder": "my_label"
                                },
                                {
                                    "_pretty_custom_function": "container_update",
                                    "contains_type": [],
                                    "custom_function": 7,
                                    "description": "Optional parameter to change the container owner. Accepts a username or role name or keyword \"current\" to set the currently running playbook user as the owner.",
                                    "id": 37,
                                    "input_type": "item",
                                    "name": "owner",
                                    "placeholder": "admin"
                                },
                                {
                                    "_pretty_custom_function": "container_update",
                                    "contains_type": [],
                                    "custom_function": 7,
                                    "description": "Optional parameter to change the container sensitivity. ",
                                    "id": 38,
                                    "input_type": "item",
                                    "name": "sensitivity",
                                    "placeholder": "amber"
                                },
                                {
                                    "_pretty_custom_function": "container_update",
                                    "contains_type": [],
                                    "custom_function": 7,
                                    "description": "Optional parameter to change the container severity.",
                                    "id": 39,
                                    "input_type": "item",
                                    "name": "severity",
                                    "placeholder": "medium"
                                },
                                {
                                    "_pretty_custom_function": "container_update",
                                    "contains_type": [],
                                    "custom_function": 7,
                                    "description": "Optional parameter to change the container status.",
                                    "id": 40,
                                    "input_type": "item",
                                    "name": "status",
                                    "placeholder": "open"
                                },
                                {
                                    "_pretty_custom_function": "container_update",
                                    "contains_type": [],
                                    "custom_function": 7,
                                    "description": "Optional parameter to change the container tags. Must be in the format of a comma separated list.",
                                    "id": 41,
                                    "input_type": "item",
                                    "name": "tags",
                                    "placeholder": "tag1, tag2"
                                },
                                {
                                    "_pretty_custom_function": "container_update",
                                    "contains_type": [],
                                    "custom_function": 7,
                                    "description": "Optional parameter to modify any extra attributes of a container. Input_json will be merged with other inputs. In the event of a conflict, input_json will take precedence.",
                                    "id": 42,
                                    "input_type": "item",
                                    "name": "input_json",
                                    "placeholder": "{\"custom_fields\": {\"field_name\": \"field_value\"}}"
                                }
                            ],
                            "name": "container_update",
                            "outputs": [],
                            "playbooks": {
                                "draft_playbooks": [],
                                "draft_version_id": null,
                                "playbooks": [
                                    {
                                        "active": false,
                                        "display_path": "community/risk_notable_preprocess",
                                        "draft_mode": false,
                                        "id": 85,
                                        "is_modern": true,
                                        "name": "risk_notable_preprocess",
                                        "playbook_type": "automation",
                                        "viewable": true
                                    },
                                    {
                                        "active": false,
                                        "display_path": "local/dynamic-loop-classic-test",
                                        "draft_mode": false,
                                        "id": 368,
                                        "is_modern": false,
                                        "name": "dynamic-loop-classic-test",
                                        "playbook_type": "automation",
                                        "viewable": true
                                    },
                                    {
                                        "active": false,
                                        "display_path": "local/ReversingLabs_TitaniumCloud_Malware_Triage",
                                        "draft_mode": false,
                                        "id": 367,
                                        "is_modern": true,
                                        "name": "ReversingLabs_TitaniumCloud_Malware_Triage",
                                        "playbook_type": "automation",
                                        "viewable": true
                                    }
                                ]
                            },
                            "scmId": 1,
                            "scmName": "community"
                        },
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "repo",
                        "status": "",
                        "status-7": "closed",
                        "title": "custom function",
                        "type": "coa.CustomFunctionBlock",
                        "userGeneratedCode": "    # Write your custom code here...",
                        "warn": false,
                        "z": 327
                    },
                    {
                        ".scmName/text": "local",
                        "active": false,
                        "active_keys": {},
                        "active_values": {},
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".customFunction": {
                                "text": "set_malicious"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".scmName": {
                                "text": "local"
                            },
                            ".title": {
                                "text": "custom function"
                            },
                            ".title-info": {
                                "text": ""
                            },
                            "g.branch image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def set_malicious(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('set_malicious() called')\n    \n    parameters = [{}]\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################    \n\n    # call custom function \"local/set_malicious\", returns the custom_function_run_id\n    phantom.custom_function(custom_function='local/set_malicious', parameters=parameters, name='set_malicious', callback=container_update_1)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "cfDisplayPath": "local/set_malicious",
                        "cfInputs": {},
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "dynamic analysis results, file reputation",
                        "connection_type": "action",
                        "currentVersion": true,
                        "customCodeEndLineOffset": 7,
                        "customCodeStartLine": 8,
                        "customFunction": "local/set_malicious",
                        "customFunctionId": null,
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "set_malicious",
                        "delay": 0,
                        "description": "",
                        "draftMode": false,
                        "existingCF": true,
                        "functionBlock": "custom function",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "4e136b76-a6dc-45d8-83b3-de519ee872de",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "def join_set_malicious(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None):\n    phantom.debug('join_set_malicious() called')\n\n    # check if all connected incoming playbooks, actions, or custom functions are done i.e. have succeeded or failed\n    if phantom.completed(action_names=['dynamic_analysis_results', 'file_reputation']):\n        \n        # call connected block \"set_malicious\"\n        set_malicious(container=container, handle=handle)\n    \n    return",
                        "join_optional": [],
                        "join_start": 374,
                        "line_end": 385,
                        "line_start": 354,
                        "message": "Configuring now",
                        "name": "set_malicious",
                        "notes": "Set has_malicious flag",
                        "number": 1,
                        "order": 13,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 180,
                            "y": 80
                        },
                        "previous_function": "",
                        "previous_name": "set_malicious",
                        "selectedCustomFunction": {
                            "description": "",
                            "draftMode": false,
                            "id": 42,
                            "inputs": [],
                            "name": "set_malicious",
                            "outputs": [],
                            "playbooks": {
                                "draft_playbooks": [],
                                "draft_version_id": null,
                                "playbooks": []
                            },
                            "scmId": 2,
                            "scmName": "local"
                        },
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "repo",
                        "status": "",
                        "title": "custom function",
                        "type": "coa.CustomFunctionBlock",
                        "userGeneratedCode": "    # Write your custom code here...",
                        "warn": false,
                        "z": 328
                    },
                    {
                        "action": "file reputation",
                        "action_type": "investigate",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "hash": "artifact:*.cef.fileHash"
                        },
                        "angle": 0,
                        "app": "Reversinglabs TitaniumCloud v2",
                        "appid": "0fd5a550-35a4-4641-9d28-9237ec71cf3c",
                        "approver": "",
                        "assets": [
                            {
                                "action": "file reputation",
                                "actions": [
                                    "get file",
                                    "upload file",
                                    "reanalyze file",
                                    "dynamic analysis results",
                                    "submit for dynamic analysis",
                                    "uri index",
                                    "uri statistics",
                                    "analyze url",
                                    "get url analysis feed from date",
                                    "get latest url analysis feed",
                                    "get downloaded files",
                                    "url reputation",
                                    "functional similarity",
                                    "file analysis",
                                    "file reputation",
                                    "av scanners",
                                    "advanced search",
                                    "imphash similarity",
                                    "get yara retro matches",
                                    "yara retro cancel hunt",
                                    "yara retro check status",
                                    "yara retro start hunt",
                                    "yara retro enable hunt",
                                    "get yara matches",
                                    "yara get ruleset text",
                                    "yara get ruleset info",
                                    "yara delete ruleset",
                                    "yara create ruleset",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "Reversinglabs TitaniumCloud v2",
                                "app_version": "1.0.1",
                                "appid": "0fd5a550-35a4-4641-9d28-9237ec71cf3c",
                                "asset_name": "reversinglabs_titaniumcloud_v2",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "hash": "artifact:*.cef.fileHash"
                                },
                                "has_app": true,
                                "id": 78,
                                "loaded": false,
                                "missing": false,
                                "name": "reversinglabs_titaniumcloud_v2",
                                "output": [
                                    {
                                        "column_name": "status",
                                        "column_order": 1,
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "column_name": "hash",
                                        "column_order": 0,
                                        "contains": [
                                            "hash",
                                            "sha256",
                                            "sha1",
                                            "md5"
                                        ],
                                        "data_path": "action_result.parameter.hash",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.summary",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric"
                                    }
                                ],
                                "parameters": {
                                    "hash": {
                                        "contains": [
                                            "hash",
                                            "sha256",
                                            "sha1",
                                            "md5"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "File hash to query",
                                        "key": "hash",
                                        "name": "hash",
                                        "order": 0,
                                        "primary": true,
                                        "required": true
                                    }
                                },
                                "product_name": "TitaniumCloud",
                                "product_vendor": "Reversinglabs",
                                "targets": "78",
                                "type": "reputation"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "file reputation"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Investigate"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_investigate.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def file_reputation(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('file_reputation() called')\n\n    # collect data for 'file_reputation' call\n    container_data = phantom.collect2(container=container, datapath=['artifact:*.cef.fileHash', 'artifact:*.id'])\n\n    parameters = []\n    \n    # build parameters list for 'file_reputation' call\n    for container_item in container_data:\n        if container_item[0]:\n            parameters.append({\n                'hash': container_item[0],\n                # context (artifact id) is added to associate results with the artifact\n                'context': {'artifact_id': container_item[1]},\n            })\n\n    phantom.act(action=\"file reputation\", parameters=parameters, assets=['reversinglabs_titaniumcloud_v2'], callback=check_status, name=\"file_reputation\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 118,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "",
                        "connection_type": "",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "file reputation",
                        "delay": "0",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "0498a3ac-d578-4ef4-82b7-982092622ab1",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 119,
                        "line_start": 98,
                        "message": "Configuring now",
                        "name": "file reputation",
                        "notes": "Queries TitaniumCloud for file reputation",
                        "number": 1,
                        "order": 5,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -220,
                            "y": 80
                        },
                        "previous_function": "",
                        "previous_name": "file_reputation",
                        "required_params": {
                            "hash": true
                        },
                        "reviewer": "",
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Investigate",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 329
                    }
                ]
            },
            "notes": ""
        },
        "input_spec": null,
        "output_spec": null,
        "playbook_type": "automation",
        "python_version": "3",
        "schema": "4",
        "version": "5.5.0.108488"
    },
    "create_time": "2023-06-01T22:26:31.698013+00:00",
    "draft_mode": false,
    "labels": [
        "*"
    ],
    "tags": []
}