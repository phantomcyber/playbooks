{
    "blockly": false,
    "blockly_xml": "<xml></xml>",
    "category": "Use Cases",
    "misc": { "apps_list": ["VirusTotal", "WildFire", "Carbon Black Response", "SMTP"] },
    "coa": {
        "data": {
            "clean": true,
            "code_block": "",
            "description": "This playbook tries to determine if a file is malware and whether or not the file is present on any managed machines. VirusTotal \"file reputation\" and PAN WildFire \"detonate file\" are used to determine if a file is malware, and CarbonBlack Response \"hunt file\" is used to search managed machines for the file. The results of these investigations are summarized in an email to the incident response team.",
            "hash": "02c016bf218883100cb140b2592644ee06c85ca8",
            "joint": {
                "cells": [
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#6C7A89",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#6a6c8a",
                                "stroke": "#6a6c8a"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "b019e440-ef29-4772-bda2-a9386a65fccb",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "cfd038f6-b7a3-49b5-9c7e-ca4f318c1899",
                            "port": "out-1",
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "f86960a4-1d0d-4f37-924c-8640149388a8",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 32
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#6C7A89",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#6a6c8a",
                                "stroke": "#6a6c8a"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "eaa4fc01-be31-4366-b66d-7aaaa8cd5967",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "12461935-1aee-4aec-878c-0e2fb1742912",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "5bafe5a5-13ad-4f05-bd01-82e0512816cb",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 171
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#6C7A89",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#6a6c8a",
                                "stroke": "#6a6c8a"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "6ebf5ded-5f69-4e73-9ef5-ced35f148756",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "35f205e2-949e-463e-9057-658f597b1dc9",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "50fa9d1f-ec06-4845-a466-01f1551db6d7",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 335
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#6C7A89",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#6a6c8a",
                                "stroke": "#6a6c8a"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "c75e82e3-b19e-42f6-aef2-e0b3db4cfc98",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "214e20f6-a5fb-4409-b2f2-752d24605d9c",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "50fa9d1f-ec06-4845-a466-01f1551db6d7",
                            "port": "in",
                            "selector": "g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 346
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#6C7A89",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#6a6c8a",
                                "stroke": "#6a6c8a"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "9feb40d9-1bf3-401b-8654-45f4fb4ef686",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "50fa9d1f-ec06-4845-a466-01f1551db6d7",
                            "port": "out-1",
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "f7b3a5ea-71f6-449d-a67a-506c8d506ceb",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 740
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#6C7A89",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#6a6c8a",
                                "stroke": "#6a6c8a"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "74fcb7c5-ea09-4556-90ce-c60cf8681d04",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "f7b3a5ea-71f6-449d-a67a-506c8d506ceb",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "cff987f2-2566-44d5-a694-26087dc2a0a2",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 767
                    },
                    {
                        "0": "S",
                        "1": "T",
                        "2": "A",
                        "3": "R",
                        "4": "T",
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "START"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.notes": {
                                "display": "none",
                                "opacity": 1
                            },
                            "rect.warn-background": {
                                "fill": "#FFFFFF"
                            },
                            "text.icon": {
                                "color": "#FFFFFF"
                            }
                        },
                        "block_code": "def on_start(container):\n    phantom.debug('on_start() called')\n    \n    # call 'filter_1' block\n    filter_1(container=container)\n\n    return",
                        "callback_code": "# read-only block view not available",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "",
                        "connection_type": "",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "4f900fb0-068e-4214-8caa-1b065f7f9bfa",
                        "inPorts": [],
                        "join_code": "# read-only block view not available",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 17,
                        "line_start": 9,
                        "name": "",
                        "notes": "",
                        "number": 0,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -120,
                            "y": 120
                        },
                        "previous_function": "",
                        "previous_name": "",
                        "show_number": true,
                        "size": {
                            "height": 48,
                            "width": 96
                        },
                        "status": "",
                        "title": "START",
                        "type": "coa.StartEnd",
                        "warn": false,
                        "z": 1394
                    },
                    {
                        "0": "E",
                        "1": "N",
                        "2": "D",
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".title": {
                                "text": "END"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.notes": {
                                "display": "none",
                                "opacity": 1
                            },
                            "rect.warn-background": {
                                "fill": "#FFFFFF"
                            },
                            "text.icon": {
                                "color": "#FFFFFF"
                            }
                        },
                        "block_code": "def on_finish(container, summary):\n    phantom.debug('on_finish() called')\n    # This function is called after all actions are completed.\n    # summary of all the action and/or all detals of actions \n    # can be collected here.\n\n    # summary_json = phantom.get_summary()\n    # if 'result' in summary_json:\n        # for action_result in summary_json['result']:\n            # if 'action_run_id' in action_result:\n                # action_results = phantom.get_action_results(action_run_id=action_result['action_run_id'], result_data=False, flatten=False)\n                # phantom.debug(action_results)\n\n    return",
                        "callback_code": "# read-only block view not available",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "send email",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "cff987f2-2566-44d5-a694-26087dc2a0a2",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "# read-only block view not available",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 337,
                        "line_start": 324,
                        "name": "",
                        "notes": "",
                        "number": 0,
                        "outPorts": [],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1780,
                            "y": 120
                        },
                        "previous_function": "",
                        "previous_name": "",
                        "show_number": true,
                        "size": {
                            "height": 48,
                            "width": 96
                        },
                        "status": "",
                        "title": "END",
                        "type": "coa.StartEnd",
                        "warn": false,
                        "z": 1571
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#6C7A89",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#6a6c8a",
                                "stroke": "#6a6c8a"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "1af67ff6-453c-46aa-87e1-3731e1a659a5",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "4f900fb0-068e-4214-8caa-1b065f7f9bfa",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "cfd038f6-b7a3-49b5-9c7e-ca4f318c1899",
                            "port": "in",
                            "selector": "g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 1682
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#6C7A89",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#6a6c8a",
                                "stroke": "#6a6c8a"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "d4f646d5-8ec0-41ef-8519-cd07b8de14f3",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "5bafe5a5-13ad-4f05-bd01-82e0512816cb",
                            "port": "out-1",
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "35f205e2-949e-463e-9057-658f597b1dc9",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 1834
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#6C7A89",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#6a6c8a",
                                "stroke": "#6a6c8a"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "ef8c12b6-f42d-459c-a8b1-b04690b626ee",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "f86960a4-1d0d-4f37-924c-8640149388a8",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "5ccf6d20-f7b8-4d43-84b4-ed885c548f7b",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 1951
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#6C7A89",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#6a6c8a",
                                "stroke": "#6a6c8a"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "0b2d5872-1c82-438a-bf42-2ffefc4b4bb1",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "5ccf6d20-f7b8-4d43-84b4-ed885c548f7b",
                            "port": "out-1",
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "214e20f6-a5fb-4409-b2f2-752d24605d9c",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 1954
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#6C7A89",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#6a6c8a",
                                "stroke": "#6a6c8a"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "ca25cb81-1e40-4c53-a811-3fd0be926cca",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "5ccf6d20-f7b8-4d43-84b4-ed885c548f7b",
                            "port": "out-2",
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(2) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "34337267-8e89-4ddf-a601-9040234d2744",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 1960
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#6C7A89",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#6a6c8a",
                                "stroke": "#6a6c8a"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "d3d6a860-6f58-4b63-86d5-8c1a7da31e5a",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "34337267-8e89-4ddf-a601-9040234d2744",
                            "port": "out-1",
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "bef1c9d9-aa68-4355-8ea3-66637924fc29",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 1967
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#6C7A89",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#6a6c8a",
                                "stroke": "#6a6c8a"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "50e35606-e056-445a-b71e-84a1d6026b43",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "bef1c9d9-aa68-4355-8ea3-66637924fc29",
                            "port": "out-1",
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "12461935-1aee-4aec-878c-0e2fb1742912",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 1969
                    },
                    {
                        "action": "file reputation",
                        "action_type": "investigate",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "hash": "filtered-data:initial_artifact_filter:condition_1:artifact:*.cef.fileHash"
                        },
                        "angle": 0,
                        "approver": "",
                        "assets": [
                            {
                                "app_name": "VirusTotal",
                                "app_version": "1.2.37",
                                "fields": {
                                    "hash": "filtered-data:filter_1:condition_1:artifact:*.cef.fileHash"
                                },
                                "name": "virustotal",
                                "output": [
                                    {
                                        "data_path": "action_result.data.*.permalink",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "hash",
                                            "sha1"
                                        ],
                                        "data_path": "action_result.data.*.sha1",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "hash",
                                            "sha256"
                                        ],
                                        "data_path": "action_result.data.*.sha256",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "hash",
                                            "md5"
                                        ],
                                        "data_path": "action_result.data.*.md5",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.total",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.positives",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.resource",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.response_code",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.scan_date",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "virustotal scan id"
                                        ],
                                        "data_path": "action_result.data.*.scan_id",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.verbose_msg",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.summary.total_scans",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.summary.positives",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.scans.*.result",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.scans.*.update",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.scans.*.version",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.scans.*.detected",
                                        "data_type": "boolean"
                                    },
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "hash",
                                            "sha256",
                                            "sha1",
                                            "md5"
                                        ],
                                        "data_path": "action_result.parameter.hash",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "summary.total_positives",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric"
                                    }
                                ],
                                "product_name": "VirusTotal",
                                "product_vendor": "VirusTotal"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "file reputation"
                            },
                            ".background": {
                                "height": 88
                            },
                            ".color-band": {
                                "fill": "#654796"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "ref-x": 16,
                                "ref-y": 70,
                                "text": ""
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".status": {
                                "fill": "#FFFFFF",
                                "ref-y": 68
                            },
                            ".title": {
                                "text": "Investigate"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.notes": {
                                "display": "block",
                                "opacity": 1
                            },
                            "rect.warn-background": {
                                "fill": "#FFFFFF"
                            },
                            "text.icon": {
                                "fill": "#FFFFFF"
                            }
                        },
                        "block_code": "def file_reputation_1(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None):\n    phantom.debug('file_reputation_1() called')\n\n    # collect data for 'file_reputation_1' call\n    filtered_artifacts_data_1 = phantom.collect2(container=container, datapath=['filtered-data:filter_1:condition_1:artifact:*.cef.fileHash', 'filtered-data:filter_1:condition_1:artifact:*.id'])\n\n    parameters = []\n    \n    # build parameters list for 'file_reputation_1' call\n    for filtered_artifacts_item_1 in filtered_artifacts_data_1:\n        parameters.append({\n            'hash': filtered_artifacts_item_1[0],\n            # context (artifact id) is added to associate results with the artifact\n            'context': {'artifact_id': filtered_artifacts_item_1[1]},\n        })\n\n    phantom.act(\"file reputation\", parameters=parameters, assets=['virustotal'], callback=filter_2, name=\"file_reputation_1\")    \n    \n    return",
                        "callback_code": "",
                        "callback_start": 55,
                        "callsback": true,
                        "color": "#654796",
                        "connected_to_start": true,
                        "connection_name": "",
                        "connection_type": "",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "delay": 0,
                        "description": "Run a reputation lookup on the fileHash to determine how many antivirus engines recognize it as malware.",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "f86960a4-1d0d-4f37-924c-8640149388a8",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 66,
                        "line_start": 46,
                        "message": "",
                        "name": "file reputation",
                        "notes": "Run a reputation lookup on the fileHash to determine how many antivirus engines recognize it as malware.",
                        "number": 1,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 180,
                            "y": 100
                        },
                        "previous_function": "",
                        "previous_name": "file_reputation_1",
                        "required_params": {},
                        "reviewer": "",
                        "show_number": false,
                        "size": {
                            "height": 112,
                            "width": 168
                        },
                        "state": "asset",
                        "status": "",
                        "title": "Investigate",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 1981
                    },
                    {
                        "action": "send email",
                        "action_type": "generic",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "attachments": "",
                            "body": "format_for_email:formatted_data",
                            "from": "automation@phantom.localhost",
                            "subject": "Malware event confirmed",
                            "to": "recipient@phantom.localhost"
                        },
                        "angle": 0,
                        "approver": "",
                        "assets": [
                            {
                                "app_name": "SMTP",
                                "app_version": "1.2.29",
                                "fields": {
                                    "attachments": "",
                                    "body": "format_for_email:formatted_data",
                                    "from": "automation@phantom.localhost",
                                    "subject": "Malware event confirmed",
                                    "to": "recipient@phantom.localhost"
                                },
                                "name": "smtp",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.parameter.body",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "email"
                                        ],
                                        "data_path": "action_result.parameter.to",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "email"
                                        ],
                                        "data_path": "action_result.parameter.from",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "vault id"
                                        ],
                                        "data_path": "action_result.parameter.attachments",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.parameter.subject",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric"
                                    }
                                ],
                                "product_name": "SMTP",
                                "product_vendor": "Generic",
                                "type": "email"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "send email"
                            },
                            ".background": {
                                "height": 88
                            },
                            ".color-band": {
                                "fill": "#5094D4"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "ref-x": 16,
                                "ref-y": 70,
                                "text": ""
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".status": {
                                "fill": "#FFFFFF",
                                "ref-y": 68
                            },
                            ".title": {
                                "text": "Generic"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.notes": {
                                "display": "block",
                                "opacity": 1
                            },
                            "rect.warn-background": {
                                "fill": "#FFFFFF"
                            },
                            "text.icon": {
                                "fill": "#FFFFFF"
                            }
                        },
                        "block_code": "def send_email_1(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None):\n    phantom.debug('send_email_1() called')\n    \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'send_email_1' call\n    formatted_data_1 = phantom.get_format_data(name='format_for_email')\n\n    parameters = []\n    \n    # build parameters list for 'send_email_1' call\n    parameters.append({\n        'from': \"automation@phantom.localhost\",\n        'to': \"recipient@phantom.localhost\",\n        'subject': \"Malware event confirmed\",\n        'body': formatted_data_1,\n        'attachments': \"\",\n    })\n\n    phantom.act(\"send email\", parameters=parameters, assets=['smtp'], name=\"send_email_1\")    \n    \n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "#5094D4",
                        "connected_to_start": true,
                        "connection_name": "hunt file 2, hunt file 1",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "delay": 0,
                        "description": "Send the formatted string as an email.",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "f7b3a5ea-71f6-449d-a67a-506c8d506ceb",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 43,
                        "line_start": 20,
                        "message": "",
                        "name": "send email",
                        "notes": "Send the formatted string as an email.",
                        "number": 1,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1540,
                            "y": 100
                        },
                        "previous_function": "",
                        "previous_name": "send_email_1",
                        "required_params": {
                            "body": true,
                            "to": true
                        },
                        "reviewer": "",
                        "show_number": false,
                        "size": {
                            "height": 112,
                            "width": 168
                        },
                        "state": "asset",
                        "status": "",
                        "title": "Generic",
                        "type": "coa.Action",
                        "warn": "",
                        "z": 2000
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "transform": "rotate(45 30 70)"
                            },
                            ".border": {
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 1
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/icon_triangle_warn.svg"
                            },
                            "g.notes": {
                                "display": "block",
                                "opacity": 1
                            }
                        },
                        "block_code": "def format_for_email(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None):\n    phantom.debug('format_for_email() called')\n    \n    template = \"\"\"Malware in a security event has been confirmed using file reputation and/or file detonation services.\n\nReputation Results:\nUsing file reputation services, the following file hashes have been identified as malware:\n{0}\n\nEDR tool detects that the above file hashes are present on the following endpoints: \n{1}\n\nDetonation Results:\nUsing sandboxing services, the following file hashes have been identified as malware:\n{2}\n\nThe Phantom Vault ID for the malicious files, as determined by the sandbox service, are as follows:\n{3}\n\nEDR tool detects that the file hashes indicated as positives per the sandbox service are present on the following endpoints: \n{4}\n\nContainer id:  {5}\n\n[EOM]\"\"\"\n\n    # parameter list for template variable replacement\n    parameters = [\n        \"hunt_file_1:action_result.parameter.hash\",\n        \"hunt_file_1:action_result.data.*.process.results.*.hostname\",\n        \"filtered-data:filter_5:condition_1:detonate_file_1:action_result.data.*.file_info.md5\",\n        \"filtered-data:filter_5:condition_1:detonate_file_1:action_result.parameter.vault_id\",\n        \"hunt_file_2:action_result.data.*.process.results.*.hostname\",\n        \"container:id\",\n    ]\n\n    phantom.format(container=container, template=template, parameters=parameters, name=\"format_for_email\")\n\n    send_email_1(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "hunt file 2, hunt file 1",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "format for email",
                        "description": "Format all results for an email.",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "50fa9d1f-ec06-4845-a466-01f1551db6d7",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "def join_format_for_email(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None):\n    phantom.debug('join_format_for_email() called')\n    \n    # if the joined function has already been called, do nothing\n    if phantom.get_run_data(key='join_format_for_email_called'):\n        return\n\n    # no callbacks to check, call connected block \"format_for_email\"\n    phantom.save_run_data(key='join_format_for_email_called', value='format_for_email', auto=True)\n\n    format_for_email(container=container, handle=handle)\n    \n    return",
                        "join_optional": [
                            "hunt_file_2",
                            "hunt_file_1"
                        ],
                        "join_start": 234,
                        "line_end": 248,
                        "line_start": 192,
                        "name": "format",
                        "notes": "Format all results for an email.",
                        "number": 1,
                        "outPorts": [
                            "out-1"
                        ],
                        "parameters": [
                            {
                                "position": 1,
                                "type": "",
                                "value": "hunt_file_1:action_result.parameter.hash"
                            },
                            {
                                "position": 1,
                                "type": "",
                                "value": "hunt_file_1:action_result.data.*.process.results.*.hostname"
                            },
                            {
                                "position": 2,
                                "type": "",
                                "value": "filtered-data:filter_5:condition_1:detonate_file_1:action_result.data.*.file_info.md5"
                            },
                            {
                                "position": 3,
                                "type": "",
                                "value": "filtered-data:filter_5:condition_1:detonate_file_1:action_result.parameter.vault_id"
                            },
                            {
                                "position": 4,
                                "type": "",
                                "value": "hunt_file_2:action_result.data.*.process.results.*.hostname"
                            },
                            {
                                "position": 5,
                                "type": "",
                                "value": "container:id"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1400,
                            "y": 100
                        },
                        "previous_function": "",
                        "previous_name": "format_for_email",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "format",
                        "status": "",
                        "template": "Malware in a security event has been confirmed using file reputation and/or file detonation services.\n\nReputation Results:\nUsing file reputation services, the following file hashes have been identified as malware:\n{0}\n\nEDR tool detects that the above file hashes are present on the following endpoints: \n{1}\n\nDetonation Results:\nUsing sandboxing services, the following file hashes have been identified as malware:\n{2}\n\nThe Phantom Vault ID for the malicious files, as determined by the sandbox service, are as follows:\n{3}\n\nEDR tool detects that the file hashes indicated as positives per the sandbox service are present on the following endpoints: \n{4}\n\n\nContainer id:  {5}\n\n[EOM]",
                        "type": "coa.Format",
                        "warn": false,
                        "z": 2015
                    },
                    {
                        "action": "hunt file",
                        "action_type": "investigate",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "hash": "filtered-data:filter_5:condition_1:detonate_file_1:action_result.data.*.file_info.md5",
                            "range": "",
                            "type": ""
                        },
                        "angle": 0,
                        "approver": "",
                        "assets": [
                            {
                                "fields": {
                                    "hash": "filtered-data:filter_5:condition_1:detonate_file_1:action_result.data.*.file_info.md5",
                                    "range": "",
                                    "type": ""
                                },
                                "name": "carbonblack",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "hash",
                                            "md5"
                                        ],
                                        "data_path": "action_result.parameter.hash",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "carbon black query type"
                                        ],
                                        "data_path": "action_result.parameter.type",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.parameter.range",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.summary.device_count",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.process.terms",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.process.total_results",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.process.facets.parent_name.*.ratio",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.process.facets.parent_name.*.percent",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.process.facets.parent_name.*.name",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.process.facets.parent_name.*.value",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.process.facets.process_name.*.ratio",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.process.facets.process_name.*.percent",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.process.facets.process_name.*.name",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.process.facets.process_name.*.value",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.process.facets.group.*.ratio",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.process.facets.group.*.percent",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.process.facets.group.*.name",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.process.facets.group.*.value",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.process.facets.path_full.*.ratio",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.process.facets.path_full.*.percent",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.process.facets.path_full.*.name",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.process.facets.path_full.*.value",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.process.facets.process_md5.*.ratio",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.process.facets.process_md5.*.percent",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.process.facets.process_md5.*.name",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.process.facets.process_md5.*.value",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.process.facets.hostname.*.ratio",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.process.facets.hostname.*.percent",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.process.facets.hostname.*.name",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.process.facets.hostname.*.value",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.process.facets.host_type.*.ratio",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.process.facets.host_type.*.percent",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.process.facets.host_type.*.name",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.process.facets.host_type.*.value",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.process.facets.hour_of_day.*.name",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.process.facets.hour_of_day.*.value",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.process.facets.start.*.name",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.process.facets.start.*.value",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.process.facets.day_of_week.*.name",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.process.facets.day_of_week.*.value",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.process.facets.username_full.*.ratio",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.process.facets.username_full.*.percent",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.process.facets.username_full.*.name",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.process.facets.username_full.*.value",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.process.results.*.modload_count",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "contains": [
                                            "carbon black sensor id"
                                        ],
                                        "data_path": "action_result.data.*.process.results.*.sensor_id",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.process.results.*.process_md5",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.process.results.*.parent_unique_id",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.process.results.*.cmdline",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.process.results.*.filemod_count",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "contains": [
                                            "carbon black process id"
                                        ],
                                        "data_path": "action_result.data.*.process.results.*.id",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.process.results.*.parent_name",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.process.results.*.parent_md5",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.process.results.*.group",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "host name"
                                        ],
                                        "data_path": "action_result.data.*.process.results.*.hostname",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.process.results.*.last_update",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.process.results.*.start",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.process.results.*.netconn_count",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "contains": [
                                            "pid"
                                        ],
                                        "data_path": "action_result.data.*.process.results.*.process_pid",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "contains": [
                                            "user name"
                                        ],
                                        "data_path": "action_result.data.*.process.results.*.username",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "process name"
                                        ],
                                        "data_path": "action_result.data.*.process.results.*.process_name",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "file path"
                                        ],
                                        "data_path": "action_result.data.*.process.results.*.path",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.process.results.*.regmod_count",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.process.results.*.parent_pid",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.process.results.*.crossproc_count",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.process.results.*.segment_id",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.process.results.*.host_type",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.process.results.*.os_type",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.process.results.*.childproc_count",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.process.results.*.unique_id",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.process.elapsed",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.process.start",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.binary.terms",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.binary.total_results",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.binary.highlights.*.ids",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.binary.highlights.*.name",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.binary.facets.host_count.*.name",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.binary.facets.host_count.*.value",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.binary.facets.alliance_score_virustotal.*.name",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.binary.facets.alliance_score_virustotal.*.value",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.binary.facets.hostname.*.ratio",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.binary.facets.hostname.*.percent",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.binary.facets.hostname.*.name",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.binary.facets.hostname.*.value",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.binary.facets.group.*.ratio",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.binary.facets.group.*.percent",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.binary.facets.group.*.name",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.binary.facets.group.*.value",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.binary.facets.file_version_facet.*.ratio",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.binary.facets.file_version_facet.*.percent",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.binary.facets.file_version_facet.*.name",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.binary.facets.file_version_facet.*.value",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.binary.facets.digsig_result.*.ratio",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.binary.facets.digsig_result.*.percent",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.binary.facets.digsig_result.*.name",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.binary.facets.digsig_result.*.value",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.binary.facets.company_name_facet.*.ratio",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.binary.facets.company_name_facet.*.percent",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.binary.facets.company_name_facet.*.name",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.binary.facets.company_name_facet.*.value",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.binary.facets.product_name_facet.*.ratio",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.binary.facets.product_name_facet.*.percent",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.binary.facets.product_name_facet.*.name",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.binary.facets.product_name_facet.*.value",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.binary.facets.server_added_timestamp.*.name",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.binary.facets.server_added_timestamp.*.value",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.binary.facets.digsig_sign_time.*.name",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.binary.facets.digsig_sign_time.*.value",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.binary.facets.observed_filename_facet.*.ratio",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.binary.facets.observed_filename_facet.*.percent",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.binary.facets.observed_filename_facet.*.name",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.binary.facets.observed_filename_facet.*.value",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.binary.results.*.host_count",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.binary.results.*.digsig_result",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.binary.results.*.observed_filename",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.binary.results.*.product_version",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Signed",
                                        "column_order": 1,
                                        "data_path": "action_result.data.*.binary.results.*.signed",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.binary.results.*.is_executable_image",
                                        "data_type": "boolean"
                                    },
                                    {
                                        "data_path": "action_result.data.*.binary.results.*.orig_mod_len",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.binary.results.*.is_64bit",
                                        "data_type": "boolean"
                                    },
                                    {
                                        "data_path": "action_result.data.*.binary.results.*.group",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.binary.results.*.file_version",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.binary.results.*.company_name",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.binary.results.*.internal_name",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.binary.results.*.product_name",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.binary.results.*.digsig_result_code",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.binary.results.*.timestamp",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.binary.results.*.copied_mod_len",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.binary.results.*.server_added_timestamp",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.binary.results.*.md5",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.binary.results.*.endpoint",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.binary.results.*.watchlists.*.wid",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.binary.results.*.watchlists.*.value",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.binary.results.*.legal_copyright",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "file name"
                                        ],
                                        "data_path": "action_result.data.*.binary.results.*.original_filename",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.binary.results.*.cb_version",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.binary.results.*.os_type",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.binary.results.*.file_desc",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.binary.results.*.last_seen",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.binary.elapsed",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.binary.start",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric"
                                    }
                                ],
                                "type": "endpoint"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "hunt file 2"
                            },
                            ".background": {
                                "height": 88
                            },
                            ".border": {
                                "height": 88
                            },
                            ".color-band": {
                                "fill": "#654796"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "ref-x": 16,
                                "ref-y": 70,
                                "text": ""
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".status": {
                                "fill": "#FFFFFF",
                                "ref-y": 68
                            },
                            ".title": {
                                "text": "Investigate"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.notes": {
                                "display": "block",
                                "opacity": 1
                            },
                            "rect.warn-background": {
                                "fill": "#FFFFFF"
                            },
                            "text.icon": {
                                "fill": "#FFFFFF"
                            }
                        },
                        "block_code": "def hunt_file_2(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None):\n    phantom.debug('hunt_file_2() called')\n    \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'hunt_file_2' call\n    filtered_results_data_1 = phantom.collect2(container=container, datapath=[\"filtered-data:filter_5:condition_1:detonate_file_1:action_result.data.*.file_info.md5\", \"filtered-data:filter_5:condition_1:detonate_file_1:action_result.parameter.context.artifact_id\"])\n\n    parameters = []\n    \n    # build parameters list for 'hunt_file_2' call\n    for filtered_results_item_1 in filtered_results_data_1:\n        parameters.append({\n            'hash': filtered_results_item_1[0],\n            'range': \"\",\n            'type': \"\",\n            # context (artifact id) is added to associate results with the artifact\n            'context': {'artifact_id': filtered_results_item_1[1]},\n        })\n\n    phantom.act(\"hunt file\", parameters=parameters, assets=['carbonblack'], callback=join_format_for_email, name=\"hunt_file_2\")    \n    \n    return",
                        "callback_code": "",
                        "callback_start": 193,
                        "callsback": true,
                        "color": "#654796",
                        "connected_to_start": true,
                        "connection_name": "detonate file",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "delay": 0,
                        "description": "Hunt for binaries with the malicious fileHash across endpoints.",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "35f205e2-949e-463e-9057-658f597b1dc9",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 215,
                        "line_end": 161,
                        "line_start": 137,
                        "message": "",
                        "name": "hunt file",
                        "notes": "Hunt for binaries with the malicious fileHash across endpoints.",
                        "number": 2,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1160,
                            "y": 240
                        },
                        "previous_function": "",
                        "previous_name": "hunt_file_2",
                        "required_params": {},
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 112,
                            "width": 168
                        },
                        "state": "asset",
                        "status": "",
                        "title": "Investigate",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 2016
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "transform": "rotate(45 30 70)"
                            },
                            ".border": {
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 4
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.notes": {
                                "display": "block",
                                "opacity": 1
                            }
                        },
                        "block_code": "def filter_4(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None):\n    phantom.debug('filter_4() called')\n\n    # collect filtered artifact ids for 'if' condition 1\n    matched_artifacts_1, matched_results_1 = phantom.condition(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"filtered-data:filter_3:condition_1:artifact:*.cef.vaultId\", \"!=\", \"\"],\n        ],\n        name=\"filter_4:condition_1\")\n\n    # call connected blocks if filtered artifacts or results\n    if matched_artifacts_1 or matched_results_1:\n        detonate_file_1(action=action, success=success, container=container, results=results, handle=handle, filtered_artifacts=matched_artifacts_1, filtered_results=matched_results_1)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "file reputation",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "filter 4",
                        "description": "Detonate file requires a Vault file, so only proceed if vaultId is not null.",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "bef1c9d9-aa68-4355-8ea3-66637924fc29",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 324,
                        "line_start": 306,
                        "name": "filter",
                        "notes": "Detonate file requires a Vault file, so only proceed if vaultId is not null.",
                        "number": 4,
                        "outPorts": [
                            "out-1"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "!=",
                                        "data_type": "",
                                        "param": "filtered-data:filter_3:condition_1:artifact:*.cef.vaultId",
                                        "value": ""
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 640,
                            "y": 240
                        },
                        "previous_function": "",
                        "previous_name": "filter_4",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "filter",
                        "status": "",
                        "type": "coa.Filter",
                        "warn": "",
                        "z": 2018
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "transform": "rotate(45 30 70)"
                            },
                            ".border": {
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 5
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/icon_triangle_warn.svg"
                            },
                            "g.notes": {
                                "display": "block",
                                "opacity": 1
                            }
                        },
                        "block_code": "def filter_5(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None):\n    phantom.debug('filter_5() called')\n\n    # collect filtered artifact ids for 'if' condition 1\n    matched_artifacts_1, matched_results_1 = phantom.condition(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"detonate_file_1:action_result.summary.malware\", \"==\", \"yes\"],\n        ],\n        name=\"filter_5:condition_1\")\n\n    # call connected blocks if filtered artifacts or results\n    if matched_artifacts_1 or matched_results_1:\n        hunt_file_2(action=action, success=success, container=container, results=results, handle=handle, filtered_artifacts=matched_artifacts_1, filtered_results=matched_results_1)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "detonate file",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "filter 5",
                        "description": "Only hunt files that are considered malware per the sandbox (malware == yes).",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "5bafe5a5-13ad-4f05-bd01-82e0512816cb",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 134,
                        "line_start": 116,
                        "name": "filter",
                        "notes": "Only hunt files that are considered malware per the sandbox (malware == yes).",
                        "number": 5,
                        "outPorts": [
                            "out-1"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "detonate_file_1:action_result.summary.malware",
                                        "value": "yes"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1020,
                            "y": 240
                        },
                        "previous_function": "",
                        "previous_name": "filter_5",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "filter",
                        "status": "",
                        "type": "coa.Filter",
                        "warn": "",
                        "z": 2020
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "transform": "rotate(45 30 70)"
                            },
                            ".border": {
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 3
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/icon_triangle_warn.svg"
                            },
                            "g.notes": {
                                "display": "block",
                                "opacity": 1
                            }
                        },
                        "block_code": "def filter_3(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None):\n    phantom.debug('filter_3() called')\n\n    # collect filtered artifact ids for 'if' condition 1\n    matched_artifacts_1, matched_results_1 = phantom.condition(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"filtered-data:filter_2:condition_2:file_reputation_1:action_result.parameter.hash\", \"==\", \"artifact:*.cef.fileHash\"],\n        ],\n        name=\"filter_3:condition_1\")\n\n    # call connected blocks if filtered artifacts or results\n    if matched_artifacts_1 or matched_results_1:\n        filter_4(action=action, success=success, container=container, results=results, handle=handle, filtered_artifacts=matched_artifacts_1, filtered_results=matched_results_1)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "file reputation",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "filter 3",
                        "description": "Match hashes with less than 10 positives to artifacts to identify filtered_artifacts.",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "34337267-8e89-4ddf-a601-9040234d2744",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 303,
                        "line_start": 285,
                        "name": "filter",
                        "notes": "Match hashes with less than 10 positives to artifacts to identify filtered_artifacts.",
                        "number": 3,
                        "outPorts": [
                            "out-1"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "filtered-data:filter_2:condition_2:file_reputation_1:action_result.parameter.hash",
                                        "value": "artifact:*.cef.fileHash"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 500,
                            "y": 240
                        },
                        "previous_function": "",
                        "previous_name": "filter_3",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "filter",
                        "status": "",
                        "type": "coa.Filter",
                        "warn": "",
                        "z": 2022
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "transform": "rotate(45 30 70)"
                            },
                            ".border": {
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 2
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".outPorts>.port-1": {
                                "port": {
                                    "id": "out-2",
                                    "type": "out"
                                },
                                "ref-x": 41,
                                "ref-y": 82
                            },
                            ".outPorts>.port-1>.port-body": {
                                "port": {
                                    "id": "out-2",
                                    "type": "out"
                                }
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.notes": {
                                "display": "block",
                                "opacity": 1
                            }
                        },
                        "block_code": "def filter_2(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None):\n    phantom.debug('filter_2() called')\n\n    # collect filtered artifact ids for 'if' condition 1\n    matched_artifacts_1, matched_results_1 = phantom.condition(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"file_reputation_1:action_result.summary.positives\", \">=\", 10],\n        ],\n        name=\"filter_2:condition_1\")\n\n    # call connected blocks if filtered artifacts or results\n    if matched_artifacts_1 or matched_results_1:\n        hunt_file_1(action=action, success=success, container=container, results=results, handle=handle, filtered_artifacts=matched_artifacts_1, filtered_results=matched_results_1)\n\n    # collect filtered artifact ids for 'if' condition 2\n    matched_artifacts_2, matched_results_2 = phantom.condition(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"file_reputation_1:action_result.summary.positives\", \"<\", 10],\n        ],\n        name=\"filter_2:condition_2\")\n\n    # call connected blocks if filtered artifacts or results\n    if matched_artifacts_2 or matched_results_2:\n        filter_3(action=action, success=success, container=container, results=results, handle=handle, filtered_artifacts=matched_artifacts_2, filtered_results=matched_results_2)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "file reputation",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "filter 2",
                        "description": "If 10 or more antivirus engines flagged the hash, proceed directly to hunt for the file. Else, use a sandbox to detonate the executable first.",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "5ccf6d20-f7b8-4d43-84b4-ed885c548f7b",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 282,
                        "line_start": 251,
                        "name": "filter",
                        "notes": "If 10 or more antivirus engines flagged the hash, proceed directly to hunt for the file. Else, use a sandbox to detonate the executable first.",
                        "number": 2,
                        "outPorts": [
                            "out-1",
                            "out-2"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": ">=",
                                        "data_type": "",
                                        "param": "file_reputation_1:action_result.summary.positives",
                                        "value": "10"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            },
                            {
                                "conditions": [
                                    {
                                        "comparison": "<",
                                        "data_type": "",
                                        "param": "file_reputation_1:action_result.summary.positives",
                                        "value": "10"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 420,
                            "y": 100
                        },
                        "previous_function": "",
                        "previous_name": "filter_2",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "filter",
                        "status": "",
                        "type": "coa.Filter",
                        "warn": "",
                        "z": 2023
                    },
                    {
                        "action": "hunt file",
                        "action_type": "investigate",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "hash": "filtered-data:filter_9:condition_1:file_reputation_1:action_result.parameter.hash",
                            "range": "",
                            "type": ""
                        },
                        "angle": 0,
                        "approver": "",
                        "assets": [
                            {
                                "app_name": "Carbon Black Response",
                                "app_version": "1.2.80",
                                "fields": {
                                    "hash": "filtered-data:filter_2:condition_1:file_reputation_1:action_result.parameter.hash",
                                    "range": "",
                                    "type": ""
                                },
                                "name": "carbonblack",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "hash",
                                            "md5"
                                        ],
                                        "data_path": "action_result.parameter.hash",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "carbon black query type"
                                        ],
                                        "data_path": "action_result.parameter.type",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.parameter.range",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.summary.device_count",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.process.terms",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.process.total_results",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.process.facets.parent_name.*.ratio",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.process.facets.parent_name.*.percent",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.process.facets.parent_name.*.name",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.process.facets.parent_name.*.value",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.process.facets.process_name.*.ratio",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.process.facets.process_name.*.percent",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.process.facets.process_name.*.name",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.process.facets.process_name.*.value",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.process.facets.group.*.ratio",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.process.facets.group.*.percent",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.process.facets.group.*.name",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.process.facets.group.*.value",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.process.facets.path_full.*.ratio",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.process.facets.path_full.*.percent",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.process.facets.path_full.*.name",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.process.facets.path_full.*.value",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.process.facets.process_md5.*.ratio",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.process.facets.process_md5.*.percent",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.process.facets.process_md5.*.name",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.process.facets.process_md5.*.value",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.process.facets.hostname.*.ratio",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.process.facets.hostname.*.percent",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.process.facets.hostname.*.name",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.process.facets.hostname.*.value",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.process.facets.host_type.*.ratio",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.process.facets.host_type.*.percent",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.process.facets.host_type.*.name",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.process.facets.host_type.*.value",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.process.facets.hour_of_day.*.name",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.process.facets.hour_of_day.*.value",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.process.facets.start.*.name",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.process.facets.start.*.value",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.process.facets.day_of_week.*.name",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.process.facets.day_of_week.*.value",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.process.facets.username_full.*.ratio",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.process.facets.username_full.*.percent",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.process.facets.username_full.*.name",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.process.facets.username_full.*.value",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.process.results.*.modload_count",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "contains": [
                                            "carbon black sensor id"
                                        ],
                                        "data_path": "action_result.data.*.process.results.*.sensor_id",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.process.results.*.process_md5",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.process.results.*.parent_unique_id",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.process.results.*.cmdline",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.process.results.*.filemod_count",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "contains": [
                                            "carbon black process id"
                                        ],
                                        "data_path": "action_result.data.*.process.results.*.id",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.process.results.*.parent_name",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.process.results.*.parent_md5",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.process.results.*.group",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "host name"
                                        ],
                                        "data_path": "action_result.data.*.process.results.*.hostname",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.process.results.*.last_update",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.process.results.*.start",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.process.results.*.netconn_count",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "contains": [
                                            "pid"
                                        ],
                                        "data_path": "action_result.data.*.process.results.*.process_pid",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "contains": [
                                            "user name"
                                        ],
                                        "data_path": "action_result.data.*.process.results.*.username",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "process name"
                                        ],
                                        "data_path": "action_result.data.*.process.results.*.process_name",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "file path"
                                        ],
                                        "data_path": "action_result.data.*.process.results.*.path",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.process.results.*.regmod_count",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.process.results.*.parent_pid",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.process.results.*.crossproc_count",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.process.results.*.segment_id",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.process.results.*.host_type",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.process.results.*.os_type",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.process.results.*.childproc_count",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.process.results.*.unique_id",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.process.elapsed",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.process.start",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.binary.terms",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.binary.total_results",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.binary.highlights.*.ids",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.binary.highlights.*.name",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.binary.facets.host_count.*.name",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.binary.facets.host_count.*.value",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.binary.facets.alliance_score_virustotal.*.name",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.binary.facets.alliance_score_virustotal.*.value",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.binary.facets.hostname.*.ratio",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.binary.facets.hostname.*.percent",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.binary.facets.hostname.*.name",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.binary.facets.hostname.*.value",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.binary.facets.group.*.ratio",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.binary.facets.group.*.percent",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.binary.facets.group.*.name",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.binary.facets.group.*.value",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.binary.facets.file_version_facet.*.ratio",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.binary.facets.file_version_facet.*.percent",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.binary.facets.file_version_facet.*.name",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.binary.facets.file_version_facet.*.value",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.binary.facets.digsig_result.*.ratio",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.binary.facets.digsig_result.*.percent",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.binary.facets.digsig_result.*.name",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.binary.facets.digsig_result.*.value",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.binary.facets.company_name_facet.*.ratio",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.binary.facets.company_name_facet.*.percent",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.binary.facets.company_name_facet.*.name",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.binary.facets.company_name_facet.*.value",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.binary.facets.product_name_facet.*.ratio",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.binary.facets.product_name_facet.*.percent",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.binary.facets.product_name_facet.*.name",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.binary.facets.product_name_facet.*.value",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.binary.facets.server_added_timestamp.*.name",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.binary.facets.server_added_timestamp.*.value",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.binary.facets.digsig_sign_time.*.name",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.binary.facets.digsig_sign_time.*.value",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.binary.facets.observed_filename_facet.*.ratio",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.binary.facets.observed_filename_facet.*.percent",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.binary.facets.observed_filename_facet.*.name",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.binary.facets.observed_filename_facet.*.value",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.binary.results.*.host_count",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.binary.results.*.digsig_result",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.binary.results.*.observed_filename",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.binary.results.*.product_version",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Signed",
                                        "column_order": 1,
                                        "data_path": "action_result.data.*.binary.results.*.signed",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.binary.results.*.is_executable_image",
                                        "data_type": "boolean"
                                    },
                                    {
                                        "data_path": "action_result.data.*.binary.results.*.orig_mod_len",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.binary.results.*.is_64bit",
                                        "data_type": "boolean"
                                    },
                                    {
                                        "data_path": "action_result.data.*.binary.results.*.group",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.binary.results.*.file_version",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.binary.results.*.company_name",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.binary.results.*.internal_name",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.binary.results.*.product_name",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.binary.results.*.digsig_result_code",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.binary.results.*.timestamp",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.binary.results.*.copied_mod_len",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.binary.results.*.server_added_timestamp",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.binary.results.*.md5",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.binary.results.*.endpoint",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.binary.results.*.watchlists.*.wid",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.binary.results.*.watchlists.*.value",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.binary.results.*.legal_copyright",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "file name"
                                        ],
                                        "data_path": "action_result.data.*.binary.results.*.original_filename",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.binary.results.*.cb_version",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.binary.results.*.os_type",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.binary.results.*.file_desc",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.binary.results.*.last_seen",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.binary.elapsed",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.binary.start",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric"
                                    }
                                ],
                                "product_name": "Carbon Black",
                                "product_vendor": "Bit9",
                                "type": "endpoint"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "hunt file 1"
                            },
                            ".background": {
                                "height": 88
                            },
                            ".border": {
                                "height": 88
                            },
                            ".color-band": {
                                "fill": "#654796"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "ref-x": 16,
                                "ref-y": 70,
                                "text": ""
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".status": {
                                "fill": "#FFFFFF",
                                "ref-y": 68
                            },
                            ".title": {
                                "text": "Investigate"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.notes": {
                                "display": "block",
                                "opacity": 1
                            },
                            "rect.warn-background": {
                                "fill": "#FFFFFF"
                            },
                            "text.icon": {
                                "fill": "#FFFFFF"
                            }
                        },
                        "block_code": "def hunt_file_1(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None):\n    phantom.debug('hunt_file_1() called')\n    \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'hunt_file_1' call\n    filtered_results_data_1 = phantom.collect2(container=container, datapath=[\"filtered-data:filter_2:condition_1:file_reputation_1:action_result.parameter.hash\", \"filtered-data:filter_2:condition_1:file_reputation_1:action_result.parameter.context.artifact_id\"])\n\n    parameters = []\n    \n    # build parameters list for 'hunt_file_1' call\n    for filtered_results_item_1 in filtered_results_data_1:\n        if filtered_results_item_1[0]:\n            parameters.append({\n                'hash': filtered_results_item_1[0],\n                'range': \"\",\n                'type': \"\",\n                # context (artifact id) is added to associate results with the artifact\n                'context': {'artifact_id': filtered_results_item_1[1]},\n            })\n\n    phantom.act(\"hunt file\", parameters=parameters, assets=['carbonblack'], callback=join_format_for_email, name=\"hunt_file_1\")    \n    \n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "#654796",
                        "connected_to_start": true,
                        "connection_name": "file reputation",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "delay": 0,
                        "description": "Hunt for binaries with the malicious fileHash across endpoints.",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "214e20f6-a5fb-4409-b2f2-752d24605d9c",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 112,
                        "line_end": 189,
                        "line_start": 164,
                        "message": "",
                        "name": "hunt file",
                        "notes": "Hunt for binaries with the malicious fileHash across endpoints.",
                        "number": 1,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 780,
                            "y": 100
                        },
                        "previous_function": "",
                        "previous_name": "hunt_file_1",
                        "required_params": {
                            "hash": true
                        },
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 112,
                            "width": 168
                        },
                        "state": "asset",
                        "status": "",
                        "title": "Investigate",
                        "type": "coa.Action",
                        "warn": "",
                        "z": 2024
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "transform": "rotate(45 30 70)"
                            },
                            ".border": {
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 1
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/icon_triangle_warn.svg"
                            },
                            "g.notes": {
                                "display": "block",
                                "opacity": 1
                            }
                        },
                        "block_code": "def filter_1(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None):\n    phantom.debug('filter_1() called')\n\n    # collect filtered artifact ids for 'if' condition 1\n    matched_artifacts_1, matched_results_1 = phantom.condition(\n        container=container,\n        conditions=[\n            [\"artifact:*.cef.fileHash\", \"!=\", \"\"],\n        ],\n        name=\"filter_1:condition_1\")\n\n    # call connected blocks if filtered artifacts or results\n    if matched_artifacts_1 or matched_results_1:\n        file_reputation_1(action=action, success=success, container=container, results=results, handle=handle, filtered_artifacts=matched_artifacts_1, filtered_results=matched_results_1)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "",
                        "connection_type": "",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "filter 1",
                        "description": "Only process artifacts that have a CEF fileHash.",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "cfd038f6-b7a3-49b5-9c7e-ca4f318c1899",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 37,
                        "line_end": 86,
                        "line_start": 69,
                        "name": "filter",
                        "notes": "Only process artifacts that have a CEF fileHash.",
                        "number": 1,
                        "outPorts": [
                            "out-1"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "!=",
                                        "data_type": "",
                                        "param": "artifact:*.cef.fileHash",
                                        "value": ""
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 40,
                            "y": 100
                        },
                        "previous_function": "",
                        "previous_name": "filter_1",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "filter",
                        "status": "",
                        "type": "coa.Filter",
                        "warn": false,
                        "z": 2025
                    },
                    {
                        "action": "detonate file",
                        "action_type": "investigate",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "file_name": "",
                            "force_analysis": "",
                            "private": "",
                            "vault_id": "filtered-data:filter_11:condition_1:artifact:*.cef.vaultId",
                            "vm": ""
                        },
                        "angle": 0,
                        "approver": "",
                        "assets": [
                            {
                                "app_name": "WildFire",
                                "app_version": "1.0.24",
                                "fields": {
                                    "file_name": "",
                                    "vault_id": "filtered-data:filter_4:condition_1:artifact:*.cef.vaultId"
                                },
                                "name": "wildfire",
                                "output": [
                                    {
                                        "contains": [
                                            "file name"
                                        ],
                                        "data_path": "action_result.parameter.file_name",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "pe file",
                                            "pdf",
                                            "flash",
                                            "apk",
                                            "jar",
                                            "doc",
                                            "xls",
                                            "ppt"
                                        ],
                                        "data_path": "action_result.parameter.vault_id",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.version",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "md5",
                                            "hash"
                                        ],
                                        "data_path": "action_result.data.*.file_info.md5",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "sha1",
                                            "hash"
                                        ],
                                        "data_path": "action_result.data.*.file_info.sha1",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.file_info.size",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "sha256",
                                            "hash"
                                        ],
                                        "data_path": "action_result.data.*.file_info.sha256",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.file_info.malware",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.file_info.filetype",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "md5",
                                            "hash"
                                        ],
                                        "data_path": "action_result.data.*.task_info.report.*.md5",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "sha256",
                                            "hash"
                                        ],
                                        "data_path": "action_result.data.*.task_info.report.*.sha256",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.task_info.report.*.malware",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.task_info.report.*.summary.entry.*.@id",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.task_info.report.*.summary.entry.*.#text",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.task_info.report.*.summary.entry.*.@score",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.task_info.report.*.summary.entry.*.@details",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.task_info.report.*.version",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.task_info.report.*.platform",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.task_info.report.*.software",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.task_info.report.*.size",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.task_info.report.*.network.dns.*.@type",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.task_info.report.*.network.dns.*.@query",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.task_info.report.*.network.dns.*.@response",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_path": "action_result.data.*.task_info.report.*.network.tcp.*.@ip",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.task_info.report.*.network.tcp.*.@port",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.task_info.report.*.network.tcp.*.@country",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "md5",
                                            "hash"
                                        ],
                                        "data_path": "action_result.data.*.task_info.report.*.evidence.file.entry.@md5",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.task_info.report.*.evidence.file.entry.#text",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "sha1",
                                            "hash"
                                        ],
                                        "data_path": "action_result.data.*.task_info.report.*.evidence.file.entry.@sha1",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "sha256",
                                            "hash"
                                        ],
                                        "data_path": "action_result.data.*.task_info.report.*.evidence.file.entry.@sha256",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.task_info.report.*.evidence.file.entry.@behavior_id",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.task_info.report.*.timeline.entry.*.@seq",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.task_info.report.*.timeline.entry.*.#text",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "pid"
                                        ],
                                        "data_path": "action_result.data.*.task_info.report.*.process_list.process.*.@pid",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "md5",
                                            "hash"
                                        ],
                                        "data_path": "action_result.data.*.task_info.report.*.process_list.process.*.file.create.*.@md5",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "file path"
                                        ],
                                        "data_path": "action_result.data.*.task_info.report.*.process_list.process.*.file.create.*.@name",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "sha1",
                                            "hash"
                                        ],
                                        "data_path": "action_result.data.*.task_info.report.*.process_list.process.*.file.create.*.@sha1",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.task_info.report.*.process_list.process.*.file.create.*.@size",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.task_info.report.*.process_list.process.*.file.create.*.@type",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "sha256",
                                            "hash"
                                        ],
                                        "data_path": "action_result.data.*.task_info.report.*.process_list.process.*.file.create.*.@sha256",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "process name"
                                        ],
                                        "data_path": "action_result.data.*.task_info.report.*.process_list.process.*.@name",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.task_info.report.*.process_list.process.*.mutex.createmutex.*.@name",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.task_info.report.*.process_list.process.*.@command",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.task_info.report.*.process_list.process.*.registry.set.*.@key",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.task_info.report.*.process_list.process.*.registry.set.*.@data",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.task_info.report.*.process_list.process.*.registry.set.*.@subkey",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.task_info.report.*.process_list.process.*.registry.create.*.@key",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.task_info.report.*.process_list.process.*.registry.create.*.@subkey",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "pid"
                                        ],
                                        "data_path": "action_result.data.*.task_info.report.*.process_tree.*.process.@pid",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "process name"
                                        ],
                                        "data_path": "action_result.data.*.task_info.report.*.process_tree.*.process.@name",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.task_info.report.*.process_tree.*.process.@text",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "md5",
                                            "hash"
                                        ],
                                        "data_path": "action_result.data.*.task_info.report.*.evidence.file.entry.*.@md5",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.task_info.report.*.evidence.file.entry.*.#text",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "sha1",
                                            "hash"
                                        ],
                                        "data_path": "action_result.data.*.task_info.report.*.evidence.file.entry.*.@sha1",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "sha256",
                                            "hash"
                                        ],
                                        "data_path": "action_result.data.*.task_info.report.*.evidence.file.entry.*.@sha256",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.task_info.report.*.evidence.file.entry.*.@behavior_id",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.summary.malware",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "contains": [
                                            "pid"
                                        ],
                                        "data_path": "action_result.data.*.task_info.report.*.file.file_deleted.*.@pid",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.task_info.report.*.file.file_deleted.*.@deleted_file",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "process name"
                                        ],
                                        "data_path": "action_result.data.*.task_info.report.*.file.file_deleted.*.@process_image",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "pid"
                                        ],
                                        "data_path": "action_result.data.*.task_info.report.*.file.file_written.*.@pid",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.task_info.report.*.file.file_written.*.@written_file",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "process name"
                                        ],
                                        "data_path": "action_result.data.*.task_info.report.*.file.file_written.*.@process_image",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.task_info.report.*.task",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.task_info.report.*.network.udp.*.@ip",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.task_info.report.*.network.udp.*.@port",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.task_info.report.*.network.udp.*.@country",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.task_info.report.*.network.url.*.@uri",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.task_info.report.*.network.url.*.@host",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.task_info.report.*.network.url.*.@method",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.task_info.report.*.network.url.*.@user_agent",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "pid"
                                        ],
                                        "data_path": "action_result.data.*.task_info.report.*.registry.deletekey.*.@pid",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.task_info.report.*.registry.deletekey.*.@reg_key",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "process name"
                                        ],
                                        "data_path": "action_result.data.*.task_info.report.*.registry.deletekey.*.@process_image",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "pid"
                                        ],
                                        "data_path": "action_result.data.*.task_info.report.*.registry.setvaluekey.*.@pid",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.task_info.report.*.registry.setvaluekey.*.@reg_key",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "process name"
                                        ],
                                        "data_path": "action_result.data.*.task_info.report.*.registry.setvaluekey.*.@process_image",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "pid"
                                        ],
                                        "data_path": "action_result.data.*.task_info.report.*.registry.deletevaluekey.*.@pid",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.task_info.report.*.registry.deletevaluekey.*.@reg_key",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "process name"
                                        ],
                                        "data_path": "action_result.data.*.task_info.report.*.registry.deletevaluekey.*.@process_image",
                                        "data_type": "string"
                                    }
                                ],
                                "product_name": "WildFire",
                                "product_vendor": "Palo Alto Networks",
                                "type": "sandbox"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "detonate file"
                            },
                            ".background": {
                                "height": 88
                            },
                            ".color-band": {
                                "fill": "#654796"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "ref-x": 16,
                                "ref-y": 70,
                                "text": ""
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".status": {
                                "fill": "#FFFFFF",
                                "ref-y": 68
                            },
                            ".title": {
                                "text": "Investigate"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.notes": {
                                "display": "block",
                                "opacity": 1
                            },
                            "rect.warn-background": {
                                "fill": "#FFFFFF"
                            },
                            "text.icon": {
                                "fill": "#FFFFFF"
                            }
                        },
                        "block_code": "def detonate_file_1(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None):\n    phantom.debug('detonate_file_1() called')\n    \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'detonate_file_1' call\n    filtered_artifacts_data_1 = phantom.collect2(container=container, datapath=['filtered-data:filter_4:condition_1:artifact:*.cef.vaultId', 'filtered-data:filter_4:condition_1:artifact:*.id'])\n\n    parameters = []\n    \n    # build parameters list for 'detonate_file_1' call\n    for filtered_artifacts_item_1 in filtered_artifacts_data_1:\n        if filtered_artifacts_item_1[0]:\n            parameters.append({\n                'vault_id': filtered_artifacts_item_1[0],\n                'file_name': \"\",\n                # context (artifact id) is added to associate results with the artifact\n                'context': {'artifact_id': filtered_artifacts_item_1[1]},\n            })\n\n    phantom.act(\"detonate file\", parameters=parameters, assets=['wildfire'], callback=filter_5, name=\"detonate_file_1\")    \n    \n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "#654796",
                        "connected_to_start": true,
                        "connection_name": "file reputation",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "delay": 0,
                        "description": "Detonate the file(s) in the vault.",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "12461935-1aee-4aec-878c-0e2fb1742912",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 135,
                        "line_end": 113,
                        "line_start": 89,
                        "message": "",
                        "name": "detonate file",
                        "notes": "Detonate the file(s) in the vault.",
                        "number": 1,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 780,
                            "y": 240
                        },
                        "previous_function": "",
                        "previous_name": "detonate_file_1",
                        "required_params": {
                            "vault_id": true
                        },
                        "reviewer": "",
                        "show_number": false,
                        "size": {
                            "height": 112,
                            "width": 168
                        },
                        "state": "asset",
                        "status": "",
                        "title": "Investigate",
                        "type": "coa.Action",
                        "warn": "",
                        "z": 2026
                    }
                ]
            },
            "notes": "The playbook uses the following Apps: \n - Virus Total (file reputation) [asset name = virustotal]\n - Palo Alto Networks Wildfire (detonate file) [asset name = wildfire]\n - Carbon Black (hunt file) [asset name = carbonblack]\n - SMTP (send email) [asset name = smtp]\n\nBe sure to update asset naming to reflect the asset names configured in your environment."
        },
        "schema": 2,
        "version": "3.0.249"
    },
    "create_time": "2017-09-06T15:03:09.959171+00:00",
    "draft_mode": false,
    "labels": [
        "*"
    ]
}
