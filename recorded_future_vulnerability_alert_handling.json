{
    "blockly": false,
    "blockly_xml": "<xml></xml>",
    "category": "Uncategorized",
    "coa": {
        "data": {
            "description": "This playbook will run on 'vulnerability' labeled containers which will include Recorded Future's New Critical or Pre NVD Vulnerabilities, alert.\n\nThe mentioned CVE's are converted to a list and passed into a Splunk search. Assuming vulnerability scan results exist in Splunk, if a match is found, the associated CVE and IP address of the affected machine will be returned into Splunk SOAR.",
            "edges": [
                {
                    "id": "port_0_to_port_2",
                    "sourceNode": "0",
                    "sourcePort": "0_out",
                    "targetNode": "2",
                    "targetPort": "2_in"
                },
                {
                    "id": "port_6_to_port_10",
                    "sourceNode": "6",
                    "sourcePort": "6_out",
                    "targetNode": "10",
                    "targetPort": "10_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_2_to_port_6",
                    "sourceNode": "2",
                    "sourcePort": "2_out",
                    "targetNode": "6",
                    "targetPort": "6_in"
                },
                {
                    "id": "port_14_to_port_13",
                    "sourceNode": "14",
                    "sourcePort": "14_out",
                    "targetNode": "13",
                    "targetPort": "13_in"
                },
                {
                    "id": "port_15_to_port_14",
                    "sourceNode": "15",
                    "sourcePort": "15_out",
                    "targetNode": "14",
                    "targetPort": "14_in"
                },
                {
                    "id": "port_13_to_port_1",
                    "sourceNode": "13",
                    "sourcePort": "13_out",
                    "targetNode": "1",
                    "targetPort": "1_in"
                },
                {
                    "id": "port_10_to_port_18",
                    "sourceNode": "10",
                    "sourcePort": "10_out",
                    "targetNode": "18",
                    "targetPort": "18_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_18_to_port_15",
                    "sourceNode": "18",
                    "sourcePort": "18_out",
                    "targetNode": "15",
                    "targetPort": "15_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_18_to_port_17",
                    "sourceNode": "18",
                    "sourcePort": "18_out",
                    "targetNode": "17",
                    "targetPort": "17_in"
                },
                {
                    "conditions": [
                        {
                            "index": 1
                        }
                    ],
                    "id": "port_18_to_port_19",
                    "sourceNode": "18",
                    "sourcePort": "18_out",
                    "targetNode": "19",
                    "targetPort": "19_in"
                },
                {
                    "id": "port_19_to_port_1",
                    "sourceNode": "19",
                    "sourcePort": "19_out",
                    "targetNode": "1",
                    "targetPort": "1_in"
                }
            ],
            "hash": "239f69f0dd09c6dd142f50733c50a531da6351e8",
            "nodes": {
                "0": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionName": "on_start",
                        "id": "0",
                        "type": "start"
                    },
                    "errors": {},
                    "id": "0",
                    "type": "start",
                    "x": 1000,
                    "y": 399.9999999999999
                },
                "1": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionId": 1,
                        "functionName": "on_finish",
                        "id": "1",
                        "type": "end"
                    },
                    "errors": {},
                    "id": "1",
                    "type": "end",
                    "userCode": "\n    # This function is called after all actions are completed.\n    # summary of all the action and/or all details of actions\n    # can be collected here.\n\n    # summary_json = phantom.get_summary()\n    # if 'result' in summary_json:\n        # for action_result in summary_json['result']:\n            # if 'action_run_id' in action_result:\n                # action_results = phantom.get_action_results(action_run_id=action_result['action_run_id'], result_data=False, flatten=False)\n                # phantom.debug(action_results)\n\n",
                    "x": 1000,
                    "y": 1520
                },
                "10": {
                    "customCode": null,
                    "data": {
                        "action": "run query",
                        "actionType": "investigate",
                        "advanced": {
                            "customName": "Query Scan Results",
                            "customNameId": 0,
                            "join": [],
                            "note": "Query Splunk for vulnerability scan results. You will need to modify the index and sourcetype fields to suit your environment."
                        },
                        "connector": "Splunk",
                        "connectorConfigs": [
                            "splunk"
                        ],
                        "connectorId": "91883aa8-9c81-470b-97a1-5d8f7995f560",
                        "connectorVersion": "v1",
                        "functionId": 1,
                        "functionName": "query_scan_results",
                        "id": "10",
                        "parameters": {
                            "command": "",
                            "query": {
                                "functionId": 1,
                                "parameters": [
                                    "deduplicated_cves:custom_function:cve"
                                ],
                                "template": "| makeresults \n| eval cve=\"{0}\" \n| makemv cve delim=\", \"\n| mvexpand cve \n| join type=inner cve\n    [ search index=main sourcetype=\"tenable:sc:vuln\" earliest=-7d@d]"
                            }
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "query"
                            },
                            {
                                "data_type": "string",
                                "default": "search",
                                "field": "command"
                            }
                        ],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "10",
                    "type": "action",
                    "userCode": null,
                    "x": 980,
                    "y": 780
                },
                "13": {
                    "data": {
                        "advanced": {
                            "join": [],
                            "note": "Add a comment with the formatted Splunk Results. This can be modified into an email to inform the vulnerability team or into a ticket for ServiceNow or Jira."
                        },
                        "functionId": 3,
                        "functionName": "add_comment_3",
                        "id": "13",
                        "selectMore": false,
                        "tab": "apis",
                        "type": "utility",
                        "utilities": {
                            "comment": {
                                "description": "",
                                "fields": [
                                    {
                                        "description": "",
                                        "label": "comment",
                                        "name": "comment",
                                        "placeholder": "Enter a comment",
                                        "renderType": "datapath",
                                        "required": true
                                    },
                                    {
                                        "hidden": true,
                                        "name": "container",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "author",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "trace",
                                        "required": false
                                    }
                                ],
                                "label": "add comment",
                                "name": "comment"
                            }
                        },
                        "utilityType": "api",
                        "values": {
                            "comment": {
                                "_internal": [
                                    "container",
                                    "author",
                                    "trace"
                                ],
                                "comment": "format_splunk_results:formatted_data"
                            }
                        }
                    },
                    "errors": {},
                    "id": "13",
                    "type": "utility",
                    "x": 980,
                    "y": 1360
                },
                "14": {
                    "data": {
                        "advanced": {
                            "customName": "Format Splunk Results",
                            "customNameId": 0,
                            "join": [],
                            "note": "Format the affected host and the CVE. Customize further for additional information."
                        },
                        "functionId": 1,
                        "functionName": "format_splunk_results",
                        "id": "14",
                        "parameters": [
                            "query_scan_results:action_result.data.*.dnsName",
                            "query_scan_results:action_result.data.*.cve",
                            "container:name"
                        ],
                        "template": "List of affected devices from {2}:\n%%\n{0} is impacted by {1}\n%%",
                        "type": "format"
                    },
                    "errors": {},
                    "id": "14",
                    "type": "format",
                    "x": 980,
                    "y": 1220
                },
                "15": {
                    "data": {
                        "action": "vulnerability intelligence",
                        "actionType": "investigate",
                        "advanced": {
                            "join": [],
                            "note": "Run a Recorded Future vulnerability lookup for each returned CVE."
                        },
                        "connector": "Recorded Future",
                        "connectorConfigs": [
                            "recorded future "
                        ],
                        "connectorId": "6efe0e1b-76ac-4ffd-8fa0-ac58fd6efd77",
                        "connectorVersion": "v1",
                        "functionId": 1,
                        "functionName": "vulnerability_intelligence_1",
                        "id": "15",
                        "parameters": {
                            "vulnerability": "query_scan_results:action_result.data.*.cve"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "vulnerability"
                            }
                        ],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "15",
                    "type": "action",
                    "x": 980,
                    "y": 1080
                },
                "17": {
                    "data": {
                        "advanced": {
                            "customName": "Pin Findings",
                            "customNameId": 0,
                            "join": [],
                            "note": "Custom code to individually pin each scan result finding."
                        },
                        "functionId": 2,
                        "functionName": "pin_findings",
                        "id": "17",
                        "inputParameters": [
                            "query_scan_results:action_result.data.*.dnsName",
                            "query_scan_results:action_result.data.*.cve"
                        ],
                        "outputVariables": [],
                        "type": "code"
                    },
                    "errors": {},
                    "id": "17",
                    "type": "code",
                    "userCode": "    for hostname, vulnerability in zip(query_scan_results_result_item_0, query_scan_results_result_item_1):\n        phantom.pin(container=container, data=hostname, message=vulnerability, pin_style=\"red\", pin_type=\"card\")\n\n",
                    "x": 580,
                    "y": 1100
                },
                "18": {
                    "data": {
                        "advanced": {
                            "join": [],
                            "note": "Continue if results are found."
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": ">",
                                        "param": "query_scan_results:action_result.summary.total_events",
                                        "value": "0"
                                    }
                                ],
                                "conditionIndex": 0,
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            },
                            {
                                "comparisons": [
                                    {
                                        "op": "==",
                                        "param": "",
                                        "value": ""
                                    }
                                ],
                                "conditionIndex": 1,
                                "display": "Else",
                                "logic": "and",
                                "type": "else"
                            }
                        ],
                        "functionId": 1,
                        "functionName": "decision_1",
                        "id": "18",
                        "type": "decision"
                    },
                    "errors": {},
                    "id": "18",
                    "type": "decision",
                    "x": 1060,
                    "y": 900
                },
                "19": {
                    "data": {
                        "advanced": {
                            "join": [],
                            "note": "No findings. Close container/alert.",
                            "refreshNotableData": true
                        },
                        "functionId": 5,
                        "functionName": "pin_set_status_5",
                        "id": "19",
                        "selectMore": false,
                        "tab": "apis",
                        "type": "utility",
                        "utilities": {
                            "pin": {
                                "description": "",
                                "fields": [
                                    {
                                        "description": "",
                                        "label": "message",
                                        "name": "message",
                                        "placeholder": "Enter a message",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "description": "",
                                        "label": "data",
                                        "name": "data",
                                        "placeholder": "Enter a value",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "choices": [
                                            "card",
                                            "data"
                                        ],
                                        "description": "",
                                        "label": "pin type",
                                        "name": "pin_type",
                                        "placeholder": "Select pin type",
                                        "renderType": "dropdown",
                                        "required": false
                                    },
                                    {
                                        "choices": [
                                            "grey",
                                            "blue",
                                            "red"
                                        ],
                                        "description": "",
                                        "label": "pin color",
                                        "name": "pin_style",
                                        "placeholder": "Select pin color",
                                        "renderType": "dropdown",
                                        "required": false
                                    },
                                    {
                                        "description": "",
                                        "label": "name",
                                        "name": "name",
                                        "placeholder": "Use a named pin",
                                        "renderType": "input",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "container",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "author",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "truncate",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "trace",
                                        "required": false
                                    }
                                ],
                                "label": "pin",
                                "name": "pin"
                            },
                            "set_status": {
                                "description": "",
                                "fields": [
                                    {
                                        "choices": "notableStatus",
                                        "description": "",
                                        "label": "status",
                                        "name": "status",
                                        "placeholder": "Select status",
                                        "renderType": "dropdown",
                                        "required": true
                                    },
                                    {
                                        "hidden": true,
                                        "name": "container",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "trace",
                                        "required": false
                                    }
                                ],
                                "label": "set status",
                                "name": "set_status",
                                "refreshNotableData": true
                            }
                        },
                        "utilityType": "api",
                        "values": {
                            "pin": {
                                "_internal": [
                                    "container",
                                    "author",
                                    "truncate",
                                    "trace"
                                ],
                                "data": "deduplicated_cves:custom_function:cve",
                                "message": "No findings in Splunk for the vulnerabilities:",
                                "name": null,
                                "pin_style": "blue",
                                "pin_type": "card"
                            },
                            "set_status": {
                                "_internal": [
                                    "container",
                                    "trace"
                                ],
                                "status": "closed"
                            }
                        }
                    },
                    "errors": {},
                    "id": "19",
                    "type": "utility",
                    "x": 1440,
                    "y": 1080
                },
                "2": {
                    "data": {
                        "advanced": {
                            "customName": "FIlter CVEs",
                            "customNameId": 0,
                            "description": "",
                            "join": [],
                            "note": "Filter CYBERVULNERABILITY artifacts for CVE's"
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "in",
                                        "param": "CYBERVULNERABILITY",
                                        "value": "artifact:*.name"
                                    },
                                    {
                                        "conditionIndex": 0,
                                        "op": "!=",
                                        "param": "artifact:*.cef.cyberVulnerability",
                                        "value": ""
                                    }
                                ],
                                "conditionIndex": 0,
                                "logic": "and"
                            }
                        ],
                        "functionId": 1,
                        "functionName": "filter_cves",
                        "id": "2",
                        "type": "filter"
                    },
                    "errors": {},
                    "id": "2",
                    "type": "filter",
                    "x": 1040,
                    "y": 500
                },
                "6": {
                    "data": {
                        "advanced": {
                            "customName": "Deduplicated CVEs",
                            "customNameId": 0,
                            "join": [],
                            "note": "Deduplicate any CVE's that are included in the same Recorded Future alert."
                        },
                        "functionId": 1,
                        "functionName": "deduplicated_cves",
                        "id": "6",
                        "inputParameters": [
                            "filtered-data:filter_cves:condition_1:artifact:*.cef.cyberVulnerability"
                        ],
                        "outputVariables": [
                            "cve"
                        ],
                        "type": "code"
                    },
                    "errors": {},
                    "id": "6",
                    "type": "code",
                    "userCode": "\n    cve_list = filtered_artifact_0__cef_cybervulnerability\n    cve_list = list(set(cve_list))\n    phantom.debug(cve_list)\n    deduplicated_cves__cve = cve_list\n\n",
                    "x": 980,
                    "y": 660
                }
            },
            "notes": ""
        },
        "input_spec": null,
        "output_spec": null,
        "playbook_type": "automation",
        "python_version": "3",
        "schema": "5.0.8",
        "version": "5.3.4.95226"
    },
    "create_time": "2022-10-05T15:09:32.639904+00:00",
    "draft_mode": false,
    "labels": [
        "*"
    ],
    "tags": []
}